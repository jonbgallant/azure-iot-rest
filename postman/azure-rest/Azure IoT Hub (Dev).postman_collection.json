{
	"info": {
		"name": "Azure IoT Hub (Dev)",
		"_postman_id": "b8d7fe0f-bf6f-6932-312c-67cd68449835",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Data Plane",
			"description": "",
			"item": [
				{
					"name": "Devices",
					"description": "",
					"item": [
						{
							"name": "Files",
							"description": "",
							"item": [
								{
									"name": "Text",
									"description": "",
									"item": [
										{
											"name": "Get File Storage URI",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.test(pm.info.requestName, () => {",
															"    pm.response.to.not.be.error;",
															"    pm.response.to.not.have.jsonBody('error');",
															"});",
															"",
															"var json = pm.response.json();",
															"",
															"pm.globals.set(\"fileStorageURI.correlationId\", json.correlationId);",
															"pm.globals.set(\"fileStorageURI.hostName\", json.hostName);",
															"pm.globals.set(\"fileStorageURI.containerName\", json.containerName);",
															"pm.globals.set(\"fileStorageURI.blobName\", json.blobName);",
															"pm.globals.set(\"fileStorageURI.sasToken\", json.sasToken);",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "{{iotHubSasToken}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"blobName\": \"{{$guid}}.json\"}"
												},
												"url": {
													"raw": "https://{{iotHubName}}.azure-devices.net/devices/{{deviceId}}/files?api-version={{iotApiVersion}}",
													"protocol": "https",
													"host": [
														"{{iotHubName}}",
														"azure-devices",
														"net"
													],
													"path": [
														"devices",
														"{{deviceId}}",
														"files"
													],
													"query": [
														{
															"key": "api-version",
															"value": "{{iotApiVersion}}",
															"equals": true
														}
													]
												},
												"description": ""
											},
											"response": []
										},
										{
											"name": "Upload Text File",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.test(pm.info.requestName, () => {",
															"    pm.response.to.not.be.error;",
															"    pm.response.to.not.have.jsonBody('error');",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-ms-blob-type",
														"value": "BlockBlob"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"device\": \"device1\", \"temp\": 42}"
												},
												"url": {
													"raw": "https://{{fileStorageURI.hostName}}/{{fileStorageURI.containerName}}/{{fileStorageURI.blobName}}{{fileStorageURI.sasToken}}",
													"protocol": "https",
													"host": [
														"{{fileStorageURI.hostName}}"
													],
													"path": [
														"{{fileStorageURI.containerName}}",
														"{{fileStorageURI.blobName}}{{fileStorageURI.sasToken}}"
													]
												},
												"description": ""
											},
											"response": []
										},
										{
											"name": "Get File Upload Notification",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.test(pm.info.requestName, () => {",
															"    pm.response.to.not.be.error;",
															"    pm.response.to.not.have.jsonBody('error');",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "{{iotHubSasToken}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"correlationId\": \"{{fileStorageURI.correlationId}}\"}"
												},
												"url": {
													"raw": "https://{{iotHubName}}.azure-devices.net/devices/{{deviceId}}/files/notifications?api-version={{iotApiVersion}}",
													"protocol": "https",
													"host": [
														"{{iotHubName}}",
														"azure-devices",
														"net"
													],
													"path": [
														"devices",
														"{{deviceId}}",
														"files",
														"notifications"
													],
													"query": [
														{
															"key": "api-version",
															"value": "{{iotApiVersion}}",
															"equals": true
														}
													]
												},
												"description": ""
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "Binary",
									"description": "",
									"item": [
										{
											"name": "Get File Storage URI",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.test(pm.info.requestName, () => {",
															"    pm.response.to.not.be.error;",
															"    pm.response.to.not.have.jsonBody('error');",
															"});",
															"",
															"var json = pm.response.json();",
															"",
															"pm.globals.set(\"fileStorageURI.correlationId\", json.correlationId);",
															"pm.globals.set(\"fileStorageURI.hostName\", json.hostName);",
															"pm.globals.set(\"fileStorageURI.containerName\", json.containerName);",
															"pm.globals.set(\"fileStorageURI.blobName\", json.blobName);",
															"pm.globals.set(\"fileStorageURI.sasToken\", json.sasToken);",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "{{iotHubSasToken}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"blobName\": \"{{$guid}}.png\"}"
												},
												"url": {
													"raw": "https://{{iotHubName}}.azure-devices.net/devices/{{deviceId}}/files?api-version={{iotApiVersion}}",
													"protocol": "https",
													"host": [
														"{{iotHubName}}",
														"azure-devices",
														"net"
													],
													"path": [
														"devices",
														"{{deviceId}}",
														"files"
													],
													"query": [
														{
															"key": "api-version",
															"value": "{{iotApiVersion}}",
															"equals": true
														}
													]
												},
												"description": ""
											},
											"response": []
										},
										{
											"name": "Upload Blob File",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.test(pm.info.requestName, () => {",
															"    pm.response.to.not.be.error;",
															"    pm.response.to.not.have.jsonBody('error');",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-ms-blob-type",
														"value": "BlockBlob"
													}
												],
												"body": {
													"mode": "file",
													"file": {
														"src": ""
													}
												},
												"url": {
													"raw": "https://{{fileStorageURI.hostName}}/{{fileStorageURI.containerName}}/{{fileStorageURI.blobName}}{{fileStorageURI.sasToken}}",
													"protocol": "https",
													"host": [
														"{{fileStorageURI.hostName}}"
													],
													"path": [
														"{{fileStorageURI.containerName}}",
														"{{fileStorageURI.blobName}}{{fileStorageURI.sasToken}}"
													]
												},
												"description": ""
											},
											"response": []
										},
										{
											"name": "Get File Upload Notification",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.test(pm.info.requestName, () => {",
															"    pm.response.to.not.be.error;",
															"    pm.response.to.not.have.jsonBody('error');",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "{{iotHubSasToken}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"correlationId\": \"{{fileStorageURI.correlationId}}\"}"
												},
												"url": {
													"raw": "https://{{iotHubName}}.azure-devices.net/devices/{{deviceId}}/files/notifications?api-version={{iotApiVersion}}",
													"protocol": "https",
													"host": [
														"{{iotHubName}}",
														"azure-devices",
														"net"
													],
													"path": [
														"devices",
														"{{deviceId}}",
														"files",
														"notifications"
													],
													"query": [
														{
															"key": "api-version",
															"value": "{{iotApiVersion}}",
															"equals": true
														}
													]
												},
												"description": ""
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Twins",
							"description": "",
							"item": [
								{
									"name": "Get Device Twin",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(pm.info.requestName, () => {",
													"    pm.response.to.not.be.error;",
													"    pm.response.to.not.have.jsonBody('error');",
													"    pm.response.to.have.jsonBody(pm.environment.get(\"deviceId\"));",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{iotHubSasToken}}"
											}
										],
										"body": {},
										"url": {
											"raw": "https://{{iotHubName}}.azure-devices.net/twins/{{deviceId}}?api-version={{iotApiVersion}}",
											"protocol": "https",
											"host": [
												"{{iotHubName}}",
												"azure-devices",
												"net"
											],
											"path": [
												"twins",
												"{{deviceId}}"
											],
											"query": [
												{
													"key": "api-version",
													"value": "{{iotApiVersion}}",
													"equals": true
												}
											]
										},
										"description": "## Generate SAS Token\n\n```\nvar x = y;\n```\n"
									},
									"response": []
								},
								{
									"name": "Update Device Twin",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(pm.info.requestName, () => {",
													"    pm.response.to.not.be.error;",
													"    pm.response.to.not.have.jsonBody('error');",
													"    pm.response.to.have.jsonBody(pm.environment.get(\"deviceId\"));",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{iotHubSasToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n        \"properties\": {\r\n            \"desired\": {\r\n                \"deviceName\": \"{{deviceTwinName}}\"\r\n            }\r\n        }\r\n    }"
										},
										"url": {
											"raw": "https://{{iotHubName}}.azure-devices.net/twins/{{deviceId}}?api-version={{iotApiVersion}}",
											"protocol": "https",
											"host": [
												"{{iotHubName}}",
												"azure-devices",
												"net"
											],
											"path": [
												"twins",
												"{{deviceId}}"
											],
											"query": [
												{
													"key": "api-version",
													"value": "{{iotApiVersion}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Configuration",
							"description": "",
							"item": [
								{
									"name": "Apply Device Configuration",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(pm.info.requestName, () => {",
													"    pm.response.to.not.be.error;",
													"    pm.response.to.not.have.jsonBody('error');",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{iotHubSasToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"moduleContent\": {\r\n    \"$edgeAgent\": {\r\n      \"properties.desired\": {\r\n        \"schemaVersion\": \"1.0\",\r\n        \"runtime\": {\r\n          \"type\": \"docker\",\r\n          \"settings\": {\r\n            \"minDockerVersion\": \"v1.25\",\r\n            \"loggingOptions\": \"\"\r\n          }\r\n        },\r\n        \"systemModules\": {\r\n          \"edgeAgent\": {\r\n            \"type\": \"docker\",\r\n            \"settings\": {\r\n              \"image\": \"jongacrwe.azurecr.io/azureiotedge-agent:1.0-preview\",\r\n              \"createOptions\": \"\"\r\n            }\r\n          },\r\n          \"edgeHub\": {\r\n            \"type\": \"docker\",\r\n            \"status\": \"running\",\r\n            \"restartPolicy\": \"always\",\r\n            \"settings\": {\r\n              \"image\": \"jongacrwe.azurecr.io/azureiotedge-hub:1.0-preview\",\r\n              \"createOptions\": \"\"\r\n            }\r\n          }\r\n        },\r\n        \"modules\": {\r\n          \"tempSensor\": {\r\n            \"version\": \"1.0\",\r\n            \"type\": \"docker\",\r\n            \"status\": \"running\",\r\n            \"restartPolicy\": \"always\",\r\n            \"settings\": {\r\n              \"image\": \"jongacrwe.azurecr.io/azureiotedge-simulated-temperature-sensor:1.0-preview\",\r\n              \"createOptions\": \"{}\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"$edgeHub\": {\r\n      \"properties.desired\": {\r\n        \"schemaVersion\": \"1.0\",\r\n        \"routes\": {\r\n          \"route\": \"FROM /* INTO $upstream\"\r\n        },\r\n        \"storeAndForwardConfiguration\": {\r\n          \"timeToLiveSecs\": 7200\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"url": {
											"raw": "https://{{iotHubName}}.azure-devices.net/devices/{{edgeDeviceId}}/applyConfigurationContent?api-version={{iotApiVersion}}",
											"protocol": "https",
											"host": [
												"{{iotHubName}}",
												"azure-devices",
												"net"
											],
											"path": [
												"devices",
												"{{edgeDeviceId}}",
												"applyConfigurationContent"
											],
											"query": [
												{
													"key": "api-version",
													"value": "{{iotApiVersion}}"
												}
											]
										},
										"description": "## Generate SAS Token\n\n```\nvar x = y;\n```\n"
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Create Device",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(pm.info.requestName, () => {",
											"    pm.response.to.not.be.error;",
											"    pm.response.to.not.have.jsonBody('error');",
											"    pm.response.to.have.jsonBody(pm.environment.get(\"deviceId\"));",
											"});",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{iotHubSasToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"deviceId\": \"{{deviceId}}\"}"
								},
								"url": {
									"raw": "https://{{iotHubName}}.azure-devices.net/devices/{{deviceId}}?api-version={{iotApiVersion}}",
									"protocol": "https",
									"host": [
										"{{iotHubName}}",
										"azure-devices",
										"net"
									],
									"path": [
										"devices",
										"{{deviceId}}"
									],
									"query": [
										{
											"key": "api-version",
											"value": "{{iotApiVersion}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Edge Device",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(pm.info.requestName, () => {",
											"    pm.response.to.not.be.error;",
											"    pm.response.to.not.have.jsonBody('error');",
											"    pm.response.to.have.jsonBody(pm.environment.get(\"deviceId\"));",
											"});",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{iotHubSasToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"deviceId\": \"{{edgeDeviceId}}\", \"capabilities\": {\"iotEdge\": true} }"
								},
								"url": {
									"raw": "https://{{iotHubName}}.azure-devices.net/devices/{{edgeDeviceId}}?api-version={{iotApiVersion}}",
									"protocol": "https",
									"host": [
										"{{iotHubName}}",
										"azure-devices",
										"net"
									],
									"path": [
										"devices",
										"{{edgeDeviceId}}"
									],
									"query": [
										{
											"key": "api-version",
											"value": "{{iotApiVersion}}"
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Get Devices",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{iotHubSasToken}}"
									}
								],
								"body": {},
								"url": {
									"raw": "https://{{iotHubName}}.azure-devices.net/devices/?api-version={{iotApiVersion}}",
									"protocol": "https",
									"host": [
										"{{iotHubName}}",
										"azure-devices",
										"net"
									],
									"path": [
										"devices",
										""
									],
									"query": [
										{
											"key": "api-version",
											"value": "{{iotApiVersion}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6a7fab6a-f7fd-4439-b548-1dfec2c55091",
						"type": "text/javascript",
						"exec": [
							"var iotHubName = pm.environment.get(\"iotHubName\");",
							"var iotHubKey = pm.environment.get(\"iotHubKey\");",
							"var iotHubTokenExpiration = pm.environment.get(\"iotHubTokenExpiration\");",
							"var iotHubPolicyName = pm.environment.get(\"iotHubPolicyName\");",
							"",
							"pm.globals.clear(\"iotHubSasToken\"); // clear out token on first run.",
							"",
							"// See this doc for details: https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-security",
							"var resourceUri = encodeURIComponent(iotHubName + '.azure-devices.net'); // The resource uri",
							"var expiry = Math.ceil((Date.now() / 1000) + iotHubTokenExpiration * 60); // Expire the token 60 minutes from now",
							"var uriExpiry = resourceUri + '\\n' + expiry; // this is the string format to gen signature from",
							"var decodedKey = CryptoJS.enc.Base64.parse(iotHubKey); // The SHA256 key is the Base64 decoded version of the IoT Hub key",
							"var signature = CryptoJS.HmacSHA256(uriExpiry, decodedKey); // The signature generated from the decodedKey",
							"var encodedUri = encodeURIComponent(CryptoJS.enc.Base64.stringify(signature)); // The url encoded version of the Base64 signature",
							"",
							"// Construct authorization string (shared access signature)",
							"var iotHubSasToken = \"SharedAccessSignature sr=\" + resourceUri + \"&sig=\" + encodedUri + \"&se=\" + expiry;",
							"",
							"// Add token if one is present",
							"if (iotHubPolicyName) {",
							"    iotHubSasToken += \"&skn=\"+ iotHubPolicyName;",
							"}",
							"",
							"// Put in variable to be used in other requests.",
							"pm.globals.set(\"iotHubSasToken\", iotHubSasToken);",
							"",
							"console.log(\"Shared Access Signature:\" + pm.globals.get(\"iotHubSasToken\"));"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "98447aaf-34f1-4741-9d59-abcff6be1092",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Control Plane",
			"description": "",
			"item": [
				{
					"name": "Get IoT Hubs in Subscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(pm.info.requestName, () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.not.have.jsonBody('error');",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/{{subscriptionId}}/providers/Microsoft.Devices/IotHubs?api-version={{controlPlaneApiVersion}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								"{{subscriptionId}}",
								"providers",
								"Microsoft.Devices",
								"IotHubs"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{controlPlaneApiVersion}}",
									"equals": true
								}
							]
						},
						"description": "Get all the IoT hubs in a subscription."
					},
					"response": []
				},
				{
					"name": "Get IoT Hubs in Resource Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(pm.info.requestName, () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.not.have.jsonBody('error');",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{iotHubResourceGroup}}/providers/Microsoft.Devices/IotHubs?api-version={{controlPlaneApiVersion}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								"{{subscriptionId}}",
								"resourceGroups",
								"{{iotHubResourceGroup}}",
								"providers",
								"Microsoft.Devices",
								"IotHubs"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{controlPlaneApiVersion}}",
									"equals": true
								}
							]
						},
						"description": "Get all the IoT hubs in a resource group."
					},
					"response": []
				},
				{
					"name": "Check IoT Hub Name Availability",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(pm.info.requestName, () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.not.have.jsonBody('error');",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"{{iotHubName}}\"}\n"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/{{subscriptionId}}/providers/Microsoft.Devices/checkNameAvailability?api-version={{controlPlaneApiVersion}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								"{{subscriptionId}}",
								"providers",
								"Microsoft.Devices",
								"checkNameAvailability"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{controlPlaneApiVersion}}",
									"equals": true
								}
							]
						},
						"description": "Check if an IoT hub name is available."
					},
					"response": []
				},
				{
					"name": "Get IoT Hub Metadata",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(pm.info.requestName, () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.not.have.jsonBody('error');",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{iotHubResourceGroup}}/providers/Microsoft.Devices/IotHubs/{{iotHubName}}?api-version={{controlPlaneApiVersion}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								"{{subscriptionId}}",
								"resourceGroups",
								"{{iotHubResourceGroup}}",
								"providers",
								"Microsoft.Devices",
								"IotHubs",
								"{{iotHubName}}"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{controlPlaneApiVersion}}",
									"equals": true
								}
							]
						},
						"description": "Get the non-security related metadata of an IoT hub."
					},
					"response": []
				},
				{
					"name": "Get IoT Hub Security Metadata",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(pm.info.requestName, () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.not.have.jsonBody('error');",
									"});",
									"",
									"",
									"var iotHubOwnerKey = _.find(pm.response.json().value, {\"keyName\": \"iothubowner\"});",
									"if(iotHubOwnerKey){",
									"    pm.globals.set(\"iotHubKey\", iotHubOwnerKey.primaryKey);",
									"    console.log(\"iotHubKey: \" + pm.globals.get(\"iotHubKey\"));",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{iotHubResourceGroup}}/providers/Microsoft.Devices/IotHubs/{{iotHubName}}/listkeys?api-version={{controlPlaneApiVersion}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								"{{subscriptionId}}",
								"resourceGroups",
								"{{iotHubResourceGroup}}",
								"providers",
								"Microsoft.Devices",
								"IotHubs",
								"{{iotHubName}}",
								"listkeys"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{controlPlaneApiVersion}}",
									"equals": true
								}
							]
						},
						"description": "Get the security metadata for an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security."
					},
					"response": []
				},
				{
					"name": "Get Shared Access Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(pm.info.requestName, () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.not.have.jsonBody('error');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{iotHubResourceGroup}}/providers/Microsoft.Devices/IotHubs/{{iotHubName}}/IotHubKeys/{{iotHubPolicyName}}/listkeys?api-version={{controlPlaneApiVersion}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								"{{subscriptionId}}",
								"resourceGroups",
								"{{iotHubResourceGroup}}",
								"providers",
								"Microsoft.Devices",
								"IotHubs",
								"{{iotHubName}}",
								"IotHubKeys",
								"{{iotHubPolicyName}}",
								"listkeys"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{controlPlaneApiVersion}}",
									"equals": true
								}
							]
						},
						"description": "Get a shared access policy by name from an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security."
					},
					"response": []
				},
				{
					"name": "Get IoT Hub Statistics",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(pm.info.requestName, () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.not.have.jsonBody('error');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{iotHubResourceGroup}}/providers/Microsoft.Devices/IotHubs/{{iotHubName}}/IotHubStats?api-version={{controlPlaneApiVersion}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								"{{subscriptionId}}",
								"resourceGroups",
								"{{iotHubResourceGroup}}",
								"providers",
								"Microsoft.Devices",
								"IotHubs",
								"{{iotHubName}}",
								"IotHubStats"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{controlPlaneApiVersion}}",
									"equals": true
								}
							]
						},
						"description": "Get the statistics from an IoT hub."
					},
					"response": []
				},
				{
					"name": "Get IoT Hub Quota Metrics",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(pm.info.requestName, () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.not.have.jsonBody('error');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{iotHubResourceGroup}}/providers/Microsoft.Devices/IotHubs/{{iotHubName}}/quotaMetrics?api-version={{controlPlaneApiVersion}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								"{{subscriptionId}}",
								"resourceGroups",
								"{{iotHubResourceGroup}}",
								"providers",
								"Microsoft.Devices",
								"IotHubs",
								"{{iotHubName}}",
								"quotaMetrics"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{controlPlaneApiVersion}}",
									"equals": true
								}
							]
						},
						"description": "Get the quota metrics for an IoT hub."
					},
					"response": []
				},
				{
					"name": "Get IoT Hub SKUs",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(pm.info.requestName, () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.not.have.jsonBody('error');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{iotHubResourceGroup}}/providers/Microsoft.Devices/IotHubs/{{iotHubName}}/skus?api-version={{controlPlaneApiVersion}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								"{{subscriptionId}}",
								"resourceGroups",
								"{{iotHubResourceGroup}}",
								"providers",
								"Microsoft.Devices",
								"IotHubs",
								"{{iotHubName}}",
								"skus"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{controlPlaneApiVersion}}",
									"equals": true
								}
							]
						},
						"description": "Get the list of valid SKUs for an IoT hub."
					},
					"response": []
				},
				{
					"name": "Get IoT Hub Jobs",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(pm.info.requestName, () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.not.have.jsonBody('error');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{iotHubResourceGroup}}/providers/Microsoft.Devices/IotHubs/{{iotHubName}}/jobs?api-version={{controlPlaneApiVersion}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								"{{subscriptionId}}",
								"resourceGroups",
								"{{iotHubResourceGroup}}",
								"providers",
								"Microsoft.Devices",
								"IotHubs",
								"{{iotHubName}}",
								"jobs"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{controlPlaneApiVersion}}",
									"equals": true
								}
							]
						},
						"description": "Get a list of all the jobs in an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry."
					},
					"response": []
				},
				{
					"name": "Get IoT Hub Job",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(pm.info.requestName, () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.not.have.jsonBody('error');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{iotHubResourceGroup}}/providers/Microsoft.Devices/IotHubs/{{iotHubName}}/jobs/{{iotHubJobId}}?api-version={{controlPlaneApiVersion}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								"{{subscriptionId}}",
								"resourceGroups",
								"{{iotHubResourceGroup}}",
								"providers",
								"Microsoft.Devices",
								"IotHubs",
								"{{iotHubName}}",
								"jobs",
								"{{iotHubJobId}}"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{controlPlaneApiVersion}}",
									"equals": true
								}
							]
						},
						"description": "Get the details of a job from an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry."
					},
					"response": []
				},
				{
					"name": "Export Devices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var accountName = pm.environment.get(\"deviceStorageAccountName\");\r",
									"var accountKey = pm.environment.get(\"deviceStorageAccountKey\");\r",
									"var containerName = pm.environment.get(\"deviceStorageExportContainer\");\r",
									"var postmanEnvVariableName = pm.environment.get(\"deviceStoragePostmanEnvVariableName\");\r",
									"\r",
									"var options = {\r",
									"  expiryPeriod: 60,\r",
									"  permissions: 'rwd',\r",
									"  serviceType: 'blob',\r",
									"  container: containerName,\r",
									"  blob: '',\r",
									"  resourceType: 'c',\r",
									"  sasVersion: '2016-05-31'\r",
									"};\r",
									"\r",
									"function AzureStorageSas(storageAccount, storageAccessKey, usePathStyleUri) {\r",
									"  this.storageAccount = storageAccount;\r",
									"  this.storageAccessKey = storageAccessKey;\r",
									"  this.usePathStyleUri = usePathStyleUri;\r",
									"}\r",
									"\r",
									"AzureStorageSas.prototype.generateAccountSignedQueryString = function (sharedAccessPolicy) {\r",
									"  var addIfNotNull = function (queryString, name, value) {\r",
									"    if (!objectIsNull(name) && !objectIsNull(value)) {\r",
									"      queryString[name] = value;\r",
									"    }\r",
									"  };\r",
									"\r",
									"  var formatAccessPolicyDates = function (accessPolicy) {\r",
									"    if (!objectIsNull(accessPolicy.Start)) {\r",
									"      if (!_.isDate(accessPolicy.Start)) {\r",
									"        accessPolicy.Start = new Date(accessPolicy.Start);\r",
									"      }\r",
									"\r",
									"      accessPolicy.Start = truncatedISO8061Date(accessPolicy.Start);\r",
									"    }\r",
									"\r",
									"    if (!objectIsNull(accessPolicy.Expiry)) {\r",
									"      if (!_.isDate(accessPolicy.Expiry)) {\r",
									"        accessPolicy.Expiry = new Date(accessPolicy.Expiry);\r",
									"      }\r",
									"\r",
									"      accessPolicy.Expiry = truncatedISO8061Date(accessPolicy.Expiry);\r",
									"    }\r",
									"  };\r",
									"\r",
									"  var queryString = {};\r",
									"\r",
									"  addIfNotNull(queryString, QueryStringConstants.SIGNED_VERSION, HeaderConstants.TARGET_STORAGE_VERSION);\r",
									"\r",
									"  // add shared access policy params\r",
									"  if (sharedAccessPolicy.AccessPolicy) {\r",
									"    formatAccessPolicyDates(sharedAccessPolicy.AccessPolicy);\r",
									"\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_SERVICES, sharedAccessPolicy.AccessPolicy.Services);\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_RESOURCE_TYPES, sharedAccessPolicy.AccessPolicy.ResourceTypes);\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_PERMISSIONS, sharedAccessPolicy.AccessPolicy.Permissions);\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_START, sharedAccessPolicy.AccessPolicy.Start);\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_EXPIRY, sharedAccessPolicy.AccessPolicy.Expiry);\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_IP, sharedAccessPolicy.AccessPolicy.IPAddressOrRange);\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_PROTOCOL, sharedAccessPolicy.AccessPolicy.Protocols);\r",
									"  }\r",
									"\r",
									"  // add signature\r",
									"  addIfNotNull(queryString, QueryStringConstants.SIGNATURE, this._generateAccountSharedAccessSignature(sharedAccessPolicy));\r",
									"\r",
									"  return this.queryStringStringify(queryString);\r",
									"};\r",
									"\r",
									"AzureStorageSas.prototype._generateAccountSharedAccessSignature = function (sharedAccessPolicy) {\r",
									"  var getvalueToAppend = function (value, noNewLine) {\r",
									"    var returnValue = '';\r",
									"    if (!objectIsNull(value)) {\r",
									"      returnValue = value;\r",
									"    }\r",
									"\r",
									"    if (noNewLine !== true) {\r",
									"      returnValue += '\\n';\r",
									"    }\r",
									"\r",
									"    return returnValue;\r",
									"  }.bind(this);\r",
									"\r",
									"  var stringToSign = getvalueToAppend(this.storageAccount) +\r",
									"    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Permissions : '') +\r",
									"    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Services : '') +\r",
									"    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.ResourceTypes : '') +\r",
									"    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Start : '') +\r",
									"    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Expiry : '') +\r",
									"    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.IPAddressOrRange : '') +\r",
									"    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Protocols : '') +\r",
									"    getvalueToAppend(HeaderConstants.TARGET_STORAGE_VERSION);\r",
									"\r",
									"  return this.signer.sign(stringToSign);\r",
									"};\r",
									"\r",
									"AzureStorageSas.prototype.signRequest = function (webResource, callback) {\r",
									"  var getvalueToAppend = function (value, headerName) {\r",
									"    // Do not sign content-length 0 in 2014-08-16 and later\r",
									"    if (headerName === HeaderConstants.CONTENT_LENGTH && (objectIsNull(value[headerName]) || value[headerName].toString() === '0')) {\r",
									"      return '\\n';\r",
									"    } else if (objectIsNull(value) || objectIsNull(value[headerName])) {\r",
									"      return '\\n';\r",
									"    } else {\r",
									"      return value[headerName] + '\\n';\r",
									"    }\r",
									"  };\r",
									"\r",
									"  var stringToSign =\r",
									"    webResource.method + '\\n' +\r",
									"    getvalueToAppend(webResource.headers, HeaderConstants.CONTENT_ENCODING) +\r",
									"    getvalueToAppend(webResource.headers, HeaderConstants.CONTENT_LANGUAGE) +\r",
									"    getvalueToAppend(webResource.headers, HeaderConstants.CONTENT_LENGTH) +\r",
									"    getvalueToAppend(webResource.headers, HeaderConstants.CONTENT_MD5) +\r",
									"    getvalueToAppend(webResource.headers, HeaderConstants.CONTENT_TYPE) +\r",
									"    getvalueToAppend(webResource.headers, HeaderConstants.DATE) +\r",
									"    getvalueToAppend(webResource.headers, HeaderConstants.IF_MODIFIED_SINCE) +\r",
									"    getvalueToAppend(webResource.headers, HeaderConstants.IF_MATCH) +\r",
									"    getvalueToAppend(webResource.headers, HeaderConstants.IF_NONE_MATCH) +\r",
									"    getvalueToAppend(webResource.headers, HeaderConstants.IF_UNMODIFIED_SINCE) +\r",
									"    getvalueToAppend(webResource.headers, HeaderConstants.RANGE) +\r",
									"    this._getCanonicalizedHeaders(webResource) +\r",
									"    this._getCanonicalizedResource(webResource);\r",
									"\r",
									"  var signature = this.signer.sign(stringToSign);\r",
									"\r",
									"  webResource.withHeader(HeaderConstants.AUTHORIZATION, 'AzureStorageSas ' + this.storageAccount + ':' + signature);\r",
									"  callback(null);\r",
									"};\r",
									"\r",
									"AzureStorageSas.prototype._getCanonicalizedResource = function (webResource) {\r",
									"  var path = '/';\r",
									"  if (webResource.path) {\r",
									"    path = webResource.path;\r",
									"  }\r",
									"\r",
									"  var canonicalizedResource = '/' + this.storageAccount + path;\r",
									"\r",
									"  // Get the raw query string values for signing\r",
									"  var queryStringValues = webResource.queryString;\r",
									"\r",
									"  // Build the canonicalized resource by sorting the values by name.\r",
									"  if (queryStringValues) {\r",
									"    var paramNames = [];\r",
									"    Object.keys(queryStringValues).forEach(function (n) {\r",
									"      paramNames.push(n);\r",
									"    });\r",
									"\r",
									"    paramNames = paramNames.sort();\r",
									"    Object.keys(paramNames).forEach(function (name) {\r",
									"      canonicalizedResource += '\\n' + paramNames[name] + ':' + queryStringValues[paramNames[name]];\r",
									"    });\r",
									"  }\r",
									"\r",
									"  return canonicalizedResource;\r",
									"};\r",
									"\r",
									"AzureStorageSas.prototype._getCanonicalizedHeaders = function (webResource) {\r",
									"  // Build canonicalized headers\r",
									"  var canonicalizedHeaders = '';\r",
									"  if (webResource.headers) {\r",
									"    var canonicalizedHeadersArray = [];\r",
									"    for (var header in webResource.headers) {\r",
									"      if (header.indexOf(HeaderConstants.PREFIX_FOR_STORAGE) === 0) {\r",
									"        var headerItem = { canonicalized: header.toLowerCase(), original: header };\r",
									"        canonicalizedHeadersArray.push(headerItem);\r",
									"      }\r",
									"    }\r",
									"\r",
									"    canonicalizedHeadersArray.sort(function (a, b) { return a.canonicalized.localeCompare(b.canonicalized); });\r",
									"\r",
									"    _.each(canonicalizedHeadersArray, function (currentHeaderItem) {\r",
									"      var value = webResource.headers[currentHeaderItem.original];\r",
									"      if (!IsNullOrEmptyOrUndefinedOrWhiteSpace(value)) {\r",
									"        canonicalizedHeaders += currentHeaderItem.canonicalized + ':' + value + '\\n';\r",
									"      } else {\r",
									"        canonicalizedHeaders += currentHeaderItem.canonicalized + ':\\n';\r",
									"      }\r",
									"    });\r",
									"  }\r",
									"\r",
									"  return canonicalizedHeaders;\r",
									"};\r",
									"\r",
									"AzureStorageSas.prototype.getSignedQueryString = function (options) {\r",
									"  var resourceName = this.createResourceName(options.container, options.blob, true);\r",
									"  var startDate = new Date();\r",
									"  startDate.setMinutes(-10);\r",
									"  var expiryDate = new Date(startDate);\r",
									"  expiryDate.setMinutes(startDate.getMinutes() + options.expiryPeriod);\r",
									"\r",
									"  var sharedAccessPolicy = {\r",
									"    AccessPolicy: {\r",
									"      Permissions: options.permissions,\r",
									"      Start: startDate,\r",
									"      Expiry: expiryDate\r",
									"    }\r",
									"  };\r",
									"\r",
									"  return this.generateSignedQueryString(options.serviceType, resourceName, sharedAccessPolicy, options.sasVersion, { resourceType: options.resourceType });\r",
									"};\r",
									"\r",
									"AzureStorageSas.prototype.createResourceName = function (containerName, blobName, forSAS) {\r",
									"  // Resource name\r",
									"  if (blobName && !forSAS) {\r",
									"    blobName = encodeURIComponent(blobName);\r",
									"    blobName = blobName.replace(/%2F/g, '/');\r",
									"    blobName = blobName.replace(/%5C/g, '/');\r",
									"    blobName = blobName.replace(/\\+/g, '%20');\r",
									"  }\r",
									"\r",
									"  // return URI encoded resource name\r",
									"  if (blobName) {\r",
									"    return containerName + '/' + blobName;\r",
									"  }\r",
									"  else {\r",
									"    return containerName;\r",
									"  }\r",
									"};\r",
									"\r",
									"AzureStorageSas.prototype.generateSignedQueryString = function (serviceType, path, sharedAccessPolicy, sasVersion, args) {\r",
									"  var addIfNotNull = function (queryString, name, value) {\r",
									"    if (!this.objectIsNull(name) && !this.objectIsNull(value)) {\r",
									"      queryString[name] = value;\r",
									"    }\r",
									"  }.bind(this);\r",
									"\r",
									"  var formatAccessPolicyDates = function (accessPolicy) {\r",
									"    if (!this.objectIsNull(accessPolicy.Start)) {\r",
									"      if (!_.isDate(accessPolicy.Start)) {\r",
									"        accessPolicy.Start = new Date(accessPolicy.Start);\r",
									"      }\r",
									"\r",
									"      accessPolicy.Start = this.truncatedISO8061Date(accessPolicy.Start);\r",
									"    }\r",
									"\r",
									"    if (!this.objectIsNull(accessPolicy.Expiry)) {\r",
									"      if (!_.isDate(accessPolicy.Expiry)) {\r",
									"        accessPolicy.Expiry = new Date(accessPolicy.Expiry);\r",
									"      }\r",
									"\r",
									"      accessPolicy.Expiry = this.truncatedISO8061Date(accessPolicy.Expiry);\r",
									"    }\r",
									"  }.bind(this);\r",
									"\r",
									"  // set up optional args\r",
									"  var queryString;\r",
									"  var resourceType;\r",
									"  var headers;\r",
									"  var tableName;\r",
									"\r",
									"  if (args) {\r",
									"    queryString = args.queryString;\r",
									"    resourceType = args.resourceType;\r",
									"    tableName = args.tableName;\r",
									"    headers = args.headers;\r",
									"  }\r",
									"\r",
									"  if (!queryString) {\r",
									"    queryString = {};\r",
									"  }\r",
									"\r",
									"  // add shared access policy params\r",
									"  if (sharedAccessPolicy.AccessPolicy) {\r",
									"    formatAccessPolicyDates(sharedAccessPolicy.AccessPolicy);\r",
									"\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_START, sharedAccessPolicy.AccessPolicy.Start);\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_EXPIRY, sharedAccessPolicy.AccessPolicy.Expiry);\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_PERMISSIONS, sharedAccessPolicy.AccessPolicy.Permissions);\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_IP, sharedAccessPolicy.AccessPolicy.IPAddressOrRange);\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_PROTOCOL, sharedAccessPolicy.AccessPolicy.Protocols);\r",
									"\r",
									"    // tables only\r",
									"    addIfNotNull(queryString, QueryStringConstants.STARTPK, sharedAccessPolicy.AccessPolicy.StartPk);\r",
									"    addIfNotNull(queryString, QueryStringConstants.ENDPK, sharedAccessPolicy.AccessPolicy.EndPk);\r",
									"    addIfNotNull(queryString, QueryStringConstants.STARTRK, sharedAccessPolicy.AccessPolicy.StartRk);\r",
									"    addIfNotNull(queryString, QueryStringConstants.ENDRK, sharedAccessPolicy.AccessPolicy.EndRk);\r",
									"  }\r",
									"\r",
									"  // validate and add version\r",
									"  var validatedSASVersionString = sasVersion; //validateVersion(sasVersion);\r",
									"  addIfNotNull(queryString, QueryStringConstants.SIGNED_VERSION, validatedSASVersionString);\r",
									"\r",
									"  // add signed identifier\r",
									"  addIfNotNull(queryString, QueryStringConstants.SIGNED_IDENTIFIER, sharedAccessPolicy.Id);\r",
									"\r",
									"  // blobs only\r",
									"  addIfNotNull(queryString, QueryStringConstants.SIGNED_RESOURCE, resourceType);\r",
									"  if (headers) {\r",
									"    addIfNotNull(queryString, QueryStringConstants.CACHE_CONTROL, headers.cacheControl);\r",
									"    addIfNotNull(queryString, QueryStringConstants.CONTENT_TYPE, headers.contentType);\r",
									"    addIfNotNull(queryString, QueryStringConstants.CONTENT_ENCODING, headers.contentEncoding);\r",
									"    addIfNotNull(queryString, QueryStringConstants.CONTENT_LANGUAGE, headers.contentLanguage);\r",
									"    addIfNotNull(queryString, QueryStringConstants.CONTENT_DISPOSITION, headers.contentDisposition);\r",
									"  }\r",
									"\r",
									"  // tables only\r",
									"  addIfNotNull(queryString, QueryStringConstants.TABLENAME, tableName);\r",
									"\r",
									"  // add signature\r",
									"  addIfNotNull(queryString, QueryStringConstants.SIGNATURE, this._generateSignature(serviceType, path, sharedAccessPolicy, validatedSASVersionString, { resourceType: resourceType, headers: headers, tableName: tableName }));\r",
									"\r",
									"  return this.queryStringStringify(queryString);\r",
									"};\r",
									"\r",
									"AzureStorageSas.prototype._generateSignature = function (serviceType, path, sharedAccessPolicy, sasVersion, args) {\r",
									"  var getvalueToAppend = function (value, noNewLine) {\r",
									"    var returnValue = '';\r",
									"    if (!this.objectIsNull(value)) {\r",
									"      returnValue = value;\r",
									"    }\r",
									"\r",
									"    if (noNewLine !== true) {\r",
									"      returnValue += '\\n';\r",
									"    }\r",
									"\r",
									"    return returnValue;\r",
									"  }.bind(this);\r",
									"\r",
									"  // set up optional args\r",
									"  var resourceType;\r",
									"  var tableName;\r",
									"  var headers;\r",
									"  if (args) {\r",
									"    resourceType = args.resourceType;\r",
									"    tableName = args.tableName;\r",
									"    headers = args.headers;\r",
									"  }\r",
									"\r",
									"  // Add leading slash to path\r",
									"  if (path.substr(0, 1) !== '/') {\r",
									"    path = '/' + path;\r",
									"  }\r",
									"\r",
									"  var canonicalizedResource;\r",
									"\r",
									"  canonicalizedResource = '/' + serviceType + '/' + this.storageAccount + path;\r",
									"\r",
									"  var stringToSign = getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Permissions : '') +\r",
									"    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Start : '') +\r",
									"    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Expiry : '') +\r",
									"    getvalueToAppend(canonicalizedResource) +\r",
									"    getvalueToAppend(sharedAccessPolicy.Id) +\r",
									"    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.IPAddressOrRange : '') +\r",
									"    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Protocols : '') +\r",
									"    sasVersion;\r",
									"\r",
									"  if (resourceType) {\r",
									"    stringToSign += '\\n' +\r",
									"      getvalueToAppend(headers ? headers.cacheControl : '') +\r",
									"      getvalueToAppend(headers ? headers.contentDisposition : '') +\r",
									"      getvalueToAppend(headers ? headers.contentEncoding : '') +\r",
									"      getvalueToAppend(headers ? headers.contentLanguage : '') +\r",
									"      getvalueToAppend(headers ? headers.contentType : '', true);\r",
									"  }\r",
									"\r",
									"\r",
									"  if (tableName) {\r",
									"    stringToSign += '\\n' +\r",
									"      getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.StartPk : '') +\r",
									"      getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.StartRk : '') +\r",
									"      getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.EndPk : '') +\r",
									"      getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.EndRk : '', true);\r",
									"  }\r",
									"\r",
									"  return this.signString(stringToSign);\r",
									"};\r",
									"\r",
									"AzureStorageSas.prototype.signString = function (stringToSign) {\r",
									"  var decodedKey = CryptoJS.enc.Base64.parse(this.storageAccessKey);\r",
									"  var hmac = CryptoJS.HmacSHA256(stringToSign, decodedKey); // The signature generated from the decodedKey\r",
									"  var digest = CryptoJS.enc.Base64.stringify(hmac);\r",
									"  return digest;\r",
									"}\r",
									"\r",
									"AzureStorageSas.prototype.objectIsNull = function (value) {\r",
									"  return _.isNull(value) || _.isUndefined(value);\r",
									"};\r",
									"\r",
									"AzureStorageSas.prototype.truncatedISO8061Date = function (date) {\r",
									"  var dateString = date.toISOString();\r",
									"  return dateString.substring(0, dateString.length - 5) + 'Z';\r",
									"};\r",
									"\r",
									"//AzureStorageSas.prototype.queryStringStringify = \r",
									"var stringifyPrimitive = function (v) {\r",
									"  switch (typeof v) {\r",
									"    case 'string':\r",
									"      return v;\r",
									"\r",
									"    case 'boolean':\r",
									"      return v ? 'true' : 'false';\r",
									"\r",
									"    case 'number':\r",
									"      return isFinite(v) ? v : '';\r",
									"\r",
									"    default:\r",
									"      return '';\r",
									"  }\r",
									"};\r",
									"\r",
									"AzureStorageSas.prototype.queryStringStringify = function (obj, sep, eq, name) {\r",
									"  sep = sep || '&';\r",
									"  eq = eq || '=';\r",
									"  if (obj === null) {\r",
									"    obj = undefined;\r",
									"  }\r",
									"\r",
									"  if (typeof obj === 'object') {\r",
									"    return Object.keys(obj).map(function (k) {\r",
									"      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\r",
									"      if (Array.isArray(obj[k])) {\r",
									"        return obj[k].map(function (v) {\r",
									"          return ks + encodeURIComponent(stringifyPrimitive(v));\r",
									"        }).join(sep);\r",
									"      } else {\r",
									"        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\r",
									"      }\r",
									"    }).join(sep);\r",
									"\r",
									"  }\r",
									"\r",
									"  if (!name) return '';\r",
									"  return encodeURIComponent(stringifyPrimitive(name)) + eq +\r",
									"    encodeURIComponent(stringifyPrimitive(obj));\r",
									"};\r",
									"\r",
									"var storageDnsSuffix = 'core.windows.net'; //process.env.AZURE_STORAGE_DNS_SUFFIX || 'core.windows.net';\r",
									"\r",
									"/**\r",
									"* Defines constants.\r",
									"*/\r",
									"var Constants = {\r",
									"  /*\r",
									"  * Specifies the value to use for UserAgent header.\r",
									"  */\r",
									"  USER_AGENT_PRODUCT_NAME: 'Azure-Storage',\r",
									"\r",
									"  /*\r",
									"  * Specifies the value to use for UserAgent header.\r",
									"  */\r",
									"  USER_AGENT_PRODUCT_VERSION: '2.1.0',\r",
									"\r",
									"  /**\r",
									"  * The number of default concurrent requests for parallel operation.\r",
									"  *\r",
									"  * @const\r",
									"  * @type {string}\r",
									"  */\r",
									"  DEFAULT_PARALLEL_OPERATION_THREAD_COUNT: 5,\r",
									"\r",
									"  /**\r",
									"  * Constant representing a kilobyte (Non-SI version).\r",
									"  *\r",
									"  * @const\r",
									"  * @type {string}\r",
									"  */\r",
									"  KB: 1024,\r",
									"\r",
									"  /**\r",
									"  * Constant representing a megabyte (Non-SI version).\r",
									"  *\r",
									"  * @const\r",
									"  * @type {string}\r",
									"  */\r",
									"  MB: 1024 * 1024,\r",
									"\r",
									"  /**\r",
									"  * Constant representing a gigabyte (Non-SI version).\r",
									"  *\r",
									"  * @const\r",
									"  * @type {string}\r",
									"  */\r",
									"  GB: 1024 * 1024 * 1024,\r",
									"\r",
									"  /**\r",
									"  * Specifies HTTP.\r",
									"  *\r",
									"  * @const\r",
									"  * @type {string}\r",
									"  */\r",
									"  HTTP: 'http:',\r",
									"\r",
									"  /**\r",
									"  * Specifies HTTPS.\r",
									"  *\r",
									"  * @const\r",
									"  * @type {string}\r",
									"  */\r",
									"  HTTPS: 'https:',\r",
									"\r",
									"  /**\r",
									"  * Default HTTP port.\r",
									"  *\r",
									"  * @const\r",
									"  * @type {int}\r",
									"  */\r",
									"  DEFAULT_HTTP_PORT: 80,\r",
									"\r",
									"  /**\r",
									"  * Default HTTPS port.\r",
									"  *\r",
									"  * @const\r",
									"  * @type {int}\r",
									"  */\r",
									"  DEFAULT_HTTPS_PORT: 443,\r",
									"\r",
									"  /**\r",
									"   * Default client request timeout in milliseconds.\r",
									"   * Integer containing the number of milliseconds to wait for a server to send response headers (and start the response body) before aborting the request.\r",
									"   * 2 minutes by default.\r",
									"   * \r",
									"   * @constant\r",
									"   * @type {int}\r",
									"   */\r",
									"  DEFAULT_CLIENT_REQUEST_TIMEOUT_IN_MS: 120000,\r",
									"\r",
									"  /**\r",
									"  * Marker for atom metadata.\r",
									"  *\r",
									"  * @const\r",
									"  * @type {string}\r",
									"  */\r",
									"  XML_METADATA_MARKER: '$',\r",
									"\r",
									"  /**\r",
									"  * Marker for atom value.\r",
									"  *\r",
									"  * @const\r",
									"  * @type {string}\r",
									"  */\r",
									"  XML_VALUE_MARKER: '_',\r",
									"\r",
									"  /**\r",
									"  * Defines the service types indicators.\r",
									"  * \r",
									"  * @const\r",
									"  * @enum\r",
									"  */\r",
									"  ServiceType: {\r",
									"    Blob: 'blob',\r",
									"    Queue: 'queue',\r",
									"    Table: 'table',\r",
									"    File: 'file',\r",
									"  },\r",
									"\r",
									"  /**\r",
									"  * Specifies the location used to indicate which location the operation can be performed against.\r",
									"  *\r",
									"  * @const\r",
									"  * @enum\r",
									"  */\r",
									"  RequestLocationMode: {\r",
									"    PRIMARY_ONLY: 0,\r",
									"    SECONDARY_ONLY: 1,\r",
									"    PRIMARY_OR_SECONDARY: 2,\r",
									"  },\r",
									"\r",
									"  /**\r",
									"  * Represents a storage service location.\r",
									"  *\r",
									"  * @const\r",
									"  * @enum\r",
									"  */\r",
									"  StorageLocation: {\r",
									"    PRIMARY: 0,\r",
									"    SECONDARY: 1,\r",
									"  },\r",
									"\r",
									"  AccountSasConstants: {\r",
									"    /**\r",
									"    * Permission types\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    Permissions: {\r",
									"      READ: 'r',\r",
									"      ADD: 'a',\r",
									"      CREATE: 'c',\r",
									"      UPDATE: 'u',\r",
									"      PROCESS: 'p',\r",
									"      WRITE: 'w',\r",
									"      DELETE: 'd',\r",
									"      LIST: 'l'\r",
									"    },\r",
									"\r",
									"    /**\r",
									"    * Services types\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    Services: {\r",
									"      BLOB: 'b',\r",
									"      FILE: 'f',\r",
									"      QUEUE: 'q',\r",
									"      TABLE: 't',\r",
									"    },\r",
									"\r",
									"    /**\r",
									"    * Resources types\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    Resources: {\r",
									"      SERVICE: 's',\r",
									"      CONTAINER: 'c',\r",
									"      OBJECT: 'o'\r",
									"    },\r",
									"\r",
									"    Protocols: {\r",
									"      HTTPSONLY: 'https',\r",
									"      HTTPSORHTTP: 'https,http'\r",
									"    },\r",
									"  },\r",
									"\r",
									"  /**\r",
									"  * Defines constants for use with shared access policies.\r",
									"  */\r",
									"  AclConstants: {\r",
									"    /**\r",
									"    * XML element for an access policy.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ACCESS_POLICY: 'AccessPolicy',\r",
									"\r",
									"    /**\r",
									"    * XML element for the end time of an access policy.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    EXPIRY: 'Expiry',\r",
									"\r",
									"    /**\r",
									"    * XML attribute for IDs.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ID: 'Id',\r",
									"\r",
									"    /**\r",
									"    * XML element for the permission of an access policy.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PERMISSION: 'Permission',\r",
									"\r",
									"    /**\r",
									"    * XML element for a signed identifier.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_IDENTIFIER_ELEMENT: 'SignedIdentifier',\r",
									"\r",
									"    /**\r",
									"    * XML element for signed identifiers.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_IDENTIFIERS_ELEMENT: 'SignedIdentifiers',\r",
									"\r",
									"    /**\r",
									"    * XML element for the start time of an access policy.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    START: 'Start'\r",
									"  },\r",
									"\r",
									"  /**\r",
									"  * Defines constants for use with service properties.\r",
									"  */\r",
									"  ServicePropertiesConstants: {\r",
									"    /**\r",
									"    * XML element for storage service properties.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    STORAGE_SERVICE_PROPERTIES_ELEMENT: 'StorageServiceProperties',\r",
									"\r",
									"    /**\r",
									"    * Default analytics version to send for logging, hour metrics and minute metrics.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    DEFAULT_ANALYTICS_VERSION: '1.0',\r",
									"\r",
									"    /**\r",
									"    * XML element for logging.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LOGGING_ELEMENT: 'Logging',\r",
									"\r",
									"    /**\r",
									"    * XML element for version.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    VERSION_ELEMENT: 'Version',\r",
									"\r",
									"    /**\r",
									"    * XML element for delete.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    DELETE_ELEMENT: 'Delete',\r",
									"\r",
									"    /**\r",
									"    * XML element for read.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    READ_ELEMENT: 'Read',\r",
									"\r",
									"    /**\r",
									"    * XML element for write.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    WRITE_ELEMENT: 'Write',\r",
									"\r",
									"    /**\r",
									"    * XML element for retention policy.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    RETENTION_POLICY_ELEMENT: 'RetentionPolicy',\r",
									"\r",
									"    /**\r",
									"    * XML element for enabled.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ENABLED_ELEMENT: 'Enabled',\r",
									"\r",
									"    /**\r",
									"    * XML element for days.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    DAYS_ELEMENT: 'Days',\r",
									"\r",
									"    /**\r",
									"    * XML element for HourMetrics.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    HOUR_METRICS_ELEMENT: 'HourMetrics',\r",
									"\r",
									"    /**\r",
									"    * XML element for MinuteMetrics.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    MINUTE_METRICS_ELEMENT: 'MinuteMetrics',\r",
									"\r",
									"    /**\r",
									"    * XML element for Cors.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CORS_ELEMENT: 'Cors',\r",
									"\r",
									"    /**\r",
									"    * XML element for CorsRule.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CORS_RULE_ELEMENT: 'CorsRule',\r",
									"\r",
									"    /**\r",
									"    * XML element for AllowedOrigins.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ALLOWED_ORIGINS_ELEMENT: 'AllowedOrigins',\r",
									"\r",
									"    /**\r",
									"    * XML element for AllowedMethods.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ALLOWED_METHODS_ELEMENT: 'AllowedMethods',\r",
									"\r",
									"    /**\r",
									"    * XML element for MaxAgeInSeconds.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    MAX_AGE_IN_SECONDS_ELEMENT: 'MaxAgeInSeconds',\r",
									"\r",
									"    /**\r",
									"    * XML element for ExposedHeaders.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    EXPOSED_HEADERS_ELEMENT: 'ExposedHeaders',\r",
									"\r",
									"    /**\r",
									"    * XML element for AllowedHeaders.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ALLOWED_HEADERS_ELEMENT: 'AllowedHeaders',\r",
									"\r",
									"    /**\r",
									"    * XML element for IncludeAPIs.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    INCLUDE_APIS_ELEMENT: 'IncludeAPIs',\r",
									"\r",
									"    /**\r",
									"    * XML element for DefaultServiceVersion.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    DEFAULT_SERVICE_VERSION_ELEMENT: 'DefaultServiceVersion'\r",
									"  },\r",
									"\r",
									"  /**\r",
									"  * Defines constants for use with blob operations.\r",
									"  */\r",
									"  BlobConstants: {\r",
									"    /**\r",
									"    * XML element for the latest.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LATEST_ELEMENT: 'Latest',\r",
									"\r",
									"    /**\r",
									"    * XML element for uncommitted blocks.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    UNCOMMITTED_ELEMENT: 'Uncommitted',\r",
									"\r",
									"    /**\r",
									"    * XML element for a block list.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOCK_LIST_ELEMENT: 'BlockList',\r",
									"\r",
									"    /**\r",
									"    * XML element for committed blocks.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    COMMITTED_ELEMENT: 'Committed',\r",
									"\r",
									"    /**\r",
									"    * The default write page size, in bytes, used by blob streams.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    DEFAULT_WRITE_PAGE_SIZE_IN_BYTES: 4 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The minimum write page size, in bytes, used by blob streams.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    MIN_WRITE_PAGE_SIZE_IN_BYTES: 2 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The default maximum size, in bytes, of a blob before it must be separated into blocks.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    DEFAULT_SINGLE_BLOB_PUT_THRESHOLD_IN_BYTES: 32 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The default write block size, in bytes, used by blob streams.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    DEFAULT_WRITE_BLOCK_SIZE_IN_BYTES: 4 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The maximum size of a single block of block blob.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    MAX_BLOCK_BLOB_BLOCK_SIZE: 100 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The maximum size of a single block of append blob.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    MAX_APPEND_BLOB_BLOCK_SIZE: 4 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The maximum size, in bytes, of a blob before it must be separated into blocks.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    MAX_SINGLE_UPLOAD_BLOB_SIZE_IN_BYTES: 64 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The maximum range get size when requesting for a contentMD5\r",
									"    */\r",
									"    MAX_RANGE_GET_SIZE_WITH_MD5: 4 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The maximum page range size for a page update operation.\r",
									"    */\r",
									"    MAX_UPDATE_PAGE_SIZE: 4 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The maximum buffer size for writing a stream buffer.\r",
									"    */\r",
									"    MAX_QUEUED_WRITE_DISK_BUFFER_SIZE: 64 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * Max size for single get page range. The max value should be 150MB\r",
									"    * http://blogs.msdn.com/b/windowsazurestorage/archive/2012/03/26/getting-the-page-ranges-of-a-large-page-blob-in-segments.aspx\r",
									"    */\r",
									"    MAX_SINGLE_GET_PAGE_RANGE_SIZE: 37 * 4 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The size of a page, in bytes, in a page blob.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PAGE_SIZE: 512,\r",
									"\r",
									"    /**\r",
									"    * Resource types.\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    ResourceTypes: {\r",
									"      CONTAINER: 'c',\r",
									"      BLOB: 'b'\r",
									"    },\r",
									"\r",
									"    /**\r",
									"    * List blob types.\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    ListBlobTypes: {\r",
									"      Blob: 'b',\r",
									"      Directory: 'd'\r",
									"    },\r",
									"\r",
									"    /**\r",
									"    * Put page write options\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    PageWriteOptions: {\r",
									"      UPDATE: 'update',\r",
									"      CLEAR: 'clear'\r",
									"    },\r",
									"\r",
									"    /**\r",
									"    * Blob types\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    BlobTypes: {\r",
									"      BLOCK: 'BlockBlob',\r",
									"      PAGE: 'PageBlob',\r",
									"      APPEND: 'AppendBlob'\r",
									"    },\r",
									"\r",
									"    /**\r",
									"    * Blob lease constants\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    LeaseOperation: {\r",
									"      ACQUIRE: 'acquire',\r",
									"      RENEW: 'renew',\r",
									"      CHANGE: 'change',\r",
									"      RELEASE: 'release',\r",
									"      BREAK: 'break'\r",
									"    }\r",
									"  },\r",
									"\r",
									"  /**\r",
									"  * Defines constants for use with file operations.\r",
									"  */\r",
									"  FileConstants: {\r",
									"    /**\r",
									"    * The default write size, in bytes, used by file streams.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    DEFAULT_WRITE_SIZE_IN_BYTES: 4 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The maximum range size when requesting for a contentMD5.\r",
									"    */\r",
									"    MAX_RANGE_GET_SIZE_WITH_MD5: 4 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The maximum range size for a file update operation.\r",
									"    */\r",
									"    MAX_UPDATE_FILE_SIZE: 4 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The default minimum size, in bytes, of a file when it must be separated into ranges.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    DEFAULT_SINGLE_FILE_GET_THRESHOLD_IN_BYTES: 32 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The minimum write file size, in bytes, used by file streams.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    MIN_WRITE_FILE_SIZE_IN_BYTES: 2 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * Put range write options\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    RangeWriteOptions: {\r",
									"      UPDATE: 'update',\r",
									"      CLEAR: 'clear'\r",
									"    },\r",
									"\r",
									"    /**\r",
									"    * Resource types.\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    ResourceTypes: {\r",
									"      SHARE: 's',\r",
									"      FILE: 'f'\r",
									"    }\r",
									"  },\r",
									"\r",
									"  /**\r",
									"  * Defines constants for use with queue storage.\r",
									"  *\r",
									"  * @const\r",
									"  * @type {string}\r",
									"  */\r",
									"  QueueConstants: {\r",
									"    /**\r",
									"    * XML element for QueueMessage.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    QUEUE_MESSAGE_ELEMENT: 'QueueMessage',\r",
									"\r",
									"    /**\r",
									"    * XML element for MessageText.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    MESSAGE_TEXT_ELEMENT: 'MessageText'\r",
									"  },\r",
									"\r",
									"  /**\r",
									"  * Defines constants for use with table storage.\r",
									"  *\r",
									"  * @const\r",
									"  * @type {string}\r",
									"  */\r",
									"  TableConstants: {\r",
									"    /**\r",
									"    * The changeset response delimiter.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CHANGESET_DELIMITER: '--changesetresponse_',\r",
									"\r",
									"    /**\r",
									"    * The batch response delimiter.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BATCH_DELIMITER: '--batchresponse_',\r",
									"\r",
									"    /**\r",
									"    * The next continuation row key token.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTINUATION_NEXT_ROW_KEY: 'x-ms-continuation-nextrowkey',\r",
									"\r",
									"    /**\r",
									"    * The next continuation partition key token.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTINUATION_NEXT_PARTITION_KEY: 'x-ms-continuation-nextpartitionkey',\r",
									"\r",
									"    /**\r",
									"    * The next continuation table name token.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTINUATION_NEXT_TABLE_NAME: 'x-ms-continuation-nexttablename',\r",
									"\r",
									"    /**\r",
									"    * The next row key query string argument.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    NEXT_ROW_KEY: 'NextRowKey',\r",
									"\r",
									"    /**\r",
									"* The next partition key query string argument.\r",
									"*\r",
									"* @const\r",
									"* @type {string}\r",
									"*/\r",
									"    NEXT_PARTITION_KEY: 'NextPartitionKey',\r",
									"\r",
									"    /**\r",
									"    * The next table name query string argument.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    NEXT_TABLE_NAME: 'NextTableName',\r",
									"\r",
									"    /** \r",
									"    * Prefix of the odata properties returned in a JSON query\r",
									"    */\r",
									"    ODATA_PREFIX: 'odata.',\r",
									"\r",
									"    /**\r",
									"    * Constant representing the string following a type annotation in a JSON table query\r",
									"    */\r",
									"    ODATA_TYPE_SUFFIX: '@odata.type',\r",
									"\r",
									"    /**\r",
									"    * Constant representing the property where the odata metadata elements are stored.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ODATA_METADATA_MARKER: '.metadata',\r",
									"\r",
									"    /**\r",
									"    * Constant representing the value for an entity property.\r",
									"    */\r",
									"    ODATA_VALUE_MARKER: '_',\r",
									"\r",
									"    /** \r",
									"    * Constant representing the type for an entity property.\r",
									"    */\r",
									"    ODATA_TYPE_MARKER: '$',\r",
									"\r",
									"    /**\r",
									"    * The value to set the maximum data service version header.\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    DEFAULT_DATA_SERVICE_VERSION: '3.0;NetFx',\r",
									"\r",
									"    /**\r",
									"    * The name of the property that stores the table name.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    TABLE_NAME: 'TableName',\r",
									"\r",
									"    /**\r",
									"    * The name of the special table used to store tables.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    TABLE_SERVICE_TABLE_NAME: 'Tables',\r",
									"\r",
									"    /**\r",
									"    * Operations\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    Operations: {\r",
									"      RETRIEVE: 'RETRIEVE',\r",
									"      INSERT: 'INSERT',\r",
									"      REPLACE: 'REPLACE',\r",
									"      MERGE: 'MERGE',\r",
									"      DELETE: 'DELETE',\r",
									"      INSERT_OR_REPLACE: 'INSERT_OR_REPLACE',\r",
									"      INSERT_OR_MERGE: 'INSERT_OR_MERGE'\r",
									"    }\r",
									"  },\r",
									"\r",
									"  /**\r",
									"  * Defines constants for use with HTTP headers.\r",
									"  */\r",
									"  HeaderConstants: {\r",
									"    /**\r",
									"    * The accept ranges header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ACCEPT_RANGES: 'accept_ranges',\r",
									"\r",
									"    /**\r",
									"    * The content transfer encoding header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_TRANSFER_ENCODING: 'content-transfer-encoding',\r",
									"\r",
									"    /**\r",
									"    * The transfer encoding header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    TRANSFER_ENCODING: 'transfer-encoding',\r",
									"\r",
									"    /**\r",
									"    * The server header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SERVER: 'server',\r",
									"\r",
									"    /**\r",
									"    * The location header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LOCATION: 'location',\r",
									"\r",
									"    /**\r",
									"    * The Last-Modified header\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LAST_MODIFIED: 'Last-Modified',\r",
									"\r",
									"    /**\r",
									"    * The data service version.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    DATA_SERVICE_VERSION: 'dataserviceversion',\r",
									"\r",
									"    /**\r",
									"    * The maximum data service version.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    MAX_DATA_SERVICE_VERSION: 'maxdataserviceversion',\r",
									"\r",
									"    /**\r",
									"    * The master Windows Azure Storage header prefix.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PREFIX_FOR_STORAGE: 'x-ms-',\r",
									"\r",
									"    /**\r",
									"    * The client request Id header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CLIENT_REQUEST_ID: 'x-ms-client-request-id',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies the approximate message count of a queue.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    APPROXIMATE_MESSAGES_COUNT: 'x-ms-approximate-messages-count',\r",
									"\r",
									"    /**\r",
									"    * The Authorization header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    AUTHORIZATION: 'authorization',\r",
									"\r",
									"    /**\r",
									"    * The header that is used to avoid browser cache.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    FORCE_NO_CACHE_IN_BROWSER: '_',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies public access to blobs.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOB_PUBLIC_ACCESS: 'x-ms-blob-public-access',\r",
									"\r",
									"    /**\r",
									"    * The header for the blob type.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOB_TYPE: 'x-ms-blob-type',\r",
									"\r",
									"    /**\r",
									"    * The header for the type.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    TYPE: 'x-ms-type',\r",
									"\r",
									"    /**\r",
									"    * Specifies the block blob type.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOCK_BLOB: 'blockblob',\r",
									"\r",
									"    /**\r",
									"    * The CacheControl header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CACHE_CONTROL: 'cache-control',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies blob caching control.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOB_CACHE_CONTROL: 'x-ms-blob-cache-control',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies caching control.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    FILE_CACHE_CONTROL: 'x-ms-cache-control',\r",
									"\r",
									"    /**\r",
									"    * The copy status.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    COPY_STATUS: 'x-ms-copy-status',\r",
									"\r",
									"    /**\r",
									"    * The copy completion time\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    COPY_COMPLETION_TIME: 'x-ms-copy-completion-time',\r",
									"\r",
									"    /**\r",
									"    * The copy status message\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    COPY_STATUS_DESCRIPTION: 'x-ms-copy-status-description',\r",
									"\r",
									"    /**\r",
									"    * The copy identifier.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    COPY_ID: 'x-ms-copy-id',\r",
									"\r",
									"    /**\r",
									"    * Progress of any copy operation\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    COPY_PROGRESS: 'x-ms-copy-progress',\r",
									"\r",
									"    /**\r",
									"    * The copy action.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    COPY_ACTION: 'x-ms-copy-action',\r",
									"\r",
									"    /**\r",
									"    * Flag if the blob is incremental copy blob.\r",
									"    */\r",
									"    INCREMENTAL_COPY: 'x-ms-incremental-copy',\r",
									"\r",
									"    /**\r",
									"    * Snapshot time of the last successful incremental copy snapshot for this blob.\r",
									"    */\r",
									"    COPY_DESTINATION_SNAPSHOT: 'x-ms-copy-destination-snapshot',\r",
									"\r",
									"    /**\r",
									"    * The ContentID header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_ID: 'content-id',\r",
									"\r",
									"    /**\r",
									"    * The ContentEncoding header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_ENCODING: 'content-encoding',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies blob content encoding.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOB_CONTENT_ENCODING: 'x-ms-blob-content-encoding',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies content encoding.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    FILE_CONTENT_ENCODING: 'x-ms-content-encoding',\r",
									"\r",
									"    /**\r",
									"    * The ContentLangauge header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_LANGUAGE: 'content-language',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies blob content language.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOB_CONTENT_LANGUAGE: 'x-ms-blob-content-language',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies content language.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    FILE_CONTENT_LANGUAGE: 'x-ms-content-language',\r",
									"\r",
									"    /**\r",
									"    * The ContentLength header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_LENGTH: 'content-length',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies blob content length.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOB_CONTENT_LENGTH: 'x-ms-blob-content-length',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies content length.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    FILE_CONTENT_LENGTH: 'x-ms-content-length',\r",
									"\r",
									"    /**\r",
									"    * The ContentDisposition header.\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_DISPOSITION: 'content-disposition',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies blob content disposition.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOB_CONTENT_DISPOSITION: 'x-ms-blob-content-disposition',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies content disposition.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    FILE_CONTENT_DISPOSITION: 'x-ms-content-disposition',\r",
									"\r",
									"    /**\r",
									"    * The ContentMD5 header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_MD5: 'content-md5',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies blob content MD5.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOB_CONTENT_MD5: 'x-ms-blob-content-md5',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies content MD5.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    FILE_CONTENT_MD5: 'x-ms-content-md5',\r",
									"\r",
									"    /**\r",
									"    * The ContentRange header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_RANGE: 'cache-range',\r",
									"\r",
									"    /**\r",
									"    * The ContentType header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_TYPE: 'content-type',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies blob content type.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOB_CONTENT_TYPE: 'x-ms-blob-content-type',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies content type.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    FILE_CONTENT_TYPE: 'x-ms-content-type',\r",
									"\r",
									"    /**\r",
									"    * The header for copy source.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    COPY_SOURCE: 'x-ms-copy-source',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies the date.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    DATE: 'date',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies the date.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    MS_DATE: 'x-ms-date',\r",
									"\r",
									"    /**\r",
									"    * The header to delete snapshots.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    DELETE_SNAPSHOT: 'x-ms-delete-snapshots',\r",
									"\r",
									"    /**\r",
									"    * The ETag header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ETAG: 'etag',\r",
									"\r",
									"    /**\r",
									"    * The IfMatch header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    IF_MATCH: 'if-match',\r",
									"\r",
									"    /**\r",
									"    * The IfModifiedSince header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    IF_MODIFIED_SINCE: 'if-modified-since',\r",
									"\r",
									"    /**\r",
									"    * The IfNoneMatch header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    IF_NONE_MATCH: 'if-none-match',\r",
									"\r",
									"    /**\r",
									"    * The IfUnmodifiedSince header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    IF_UNMODIFIED_SINCE: 'if-unmodified-since',\r",
									"\r",
									"    /**\r",
									"    * Specifies snapshots are to be included.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    INCLUDE_SNAPSHOTS_VALUE: 'include',\r",
									"\r",
									"    /**\r",
									"    * Specifies that the content-type is JSON.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    JSON_CONTENT_TYPE_VALUE: 'application/json;',\r",
									"\r",
									"\r",
									"    /**\r",
									"    * The header that specifies lease ID.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LEASE_ID: 'x-ms-lease-id',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies the lease break period.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LEASE_BREAK_PERIOD: 'x-ms-lease-break-period',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies the proposed lease identifier.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PROPOSED_LEASE_ID: 'x-ms-proposed-lease-id',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies the lease duration.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LEASE_DURATION: 'x-ms-lease-duration',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies the source lease ID.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SOURCE_LEASE_ID: 'x-ms-source-lease-id',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies lease time.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LEASE_TIME: 'x-ms-lease-time',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies lease status.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LEASE_STATUS: 'x-ms-lease-status',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies lease state.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LEASE_STATE: 'x-ms-lease-state',\r",
									"\r",
									"    /**\r",
									"    * Specifies the page blob type.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PAGE_BLOB: 'PageBlob',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies page write mode.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PAGE_WRITE: 'x-ms-page-write',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies file range write mode.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    FILE_WRITE: 'x-ms-write',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies whether the response should include the inserted entity.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PREFER: 'Prefer',\r",
									"\r",
									"    /**\r",
									"    * The header value which specifies that the response should include the inserted entity.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PREFER_CONTENT: 'return-content',\r",
									"\r",
									"    /**\r",
									"    * The header value which specifies that the response should not include the inserted entity.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PREFER_NO_CONTENT: 'return-no-content',\r",
									"\r",
									"    /**\r",
									"    * The header prefix for metadata.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PREFIX_FOR_STORAGE_METADATA: 'x-ms-meta-',\r",
									"\r",
									"    /**\r",
									"    * The header prefix for properties.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PREFIX_FOR_STORAGE_PROPERTIES: 'x-ms-prop-',\r",
									"\r",
									"    /**\r",
									"    * The Range header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    RANGE: 'Range',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies if the request will populate the ContentMD5 header for range gets.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    RANGE_GET_CONTENT_MD5: 'x-ms-range-get-content-md5',\r",
									"\r",
									"    /**\r",
									"    * The format string for specifying ranges.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    RANGE_HEADER_FORMAT: 'bytes:%d-%d',\r",
									"\r",
									"    /**\r",
									"    * The header that indicates the request ID.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    REQUEST_ID: 'x-ms-request-id',\r",
									"\r",
									"    /**\r",
									"    * The header for specifying the sequence number.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SEQUENCE_NUMBER: 'x-ms-blob-sequence-number',\r",
									"\r",
									"    /**\r",
									"    * The header for specifying the If-Sequence-Number-EQ condition.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SEQUENCE_NUMBER_EQUAL: 'x-ms-if-sequence-number-eq',\r",
									"\r",
									"    /**\r",
									"    * The header for specifying the If-Sequence-Number-LT condition.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SEQUENCE_NUMBER_LESS_THAN: 'x-ms-if-sequence-number-lt',\r",
									"\r",
									"    /**\r",
									"    * The header for specifying the If-Sequence-Number-LE condition.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SEQUENCE_NUMBER_LESS_THAN_OR_EQUAL: 'x-ms-if-sequence-number-le',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies sequence number action.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SEQUENCE_NUMBER_ACTION: 'x-ms-sequence-number-action',\r",
									"\r",
									"    /**\r",
									"    * The header for the blob content length.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIZE: 'x-ms-blob-content-length',\r",
									"\r",
									"    /**\r",
									"    * The header for snapshots.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SNAPSHOT: 'x-ms-snapshot',\r",
									"\r",
									"    /**\r",
									"    * Specifies only snapshots are to be included.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SNAPSHOTS_ONLY_VALUE: 'only',\r",
									"\r",
									"    /**\r",
									"    * The header for the If-Match condition.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SOURCE_IF_MATCH: 'x-ms-source-if-match',\r",
									"\r",
									"    /**\r",
									"    * The header for the If-Modified-Since condition.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SOURCE_IF_MODIFIED_SINCE: 'x-ms-source-if-modified-since',\r",
									"\r",
									"    /**\r",
									"    * The header for the If-None-Match condition.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SOURCE_IF_NONE_MATCH: 'x-ms-source-if-none-match',\r",
									"\r",
									"    /**\r",
									"    * The header for the If-Unmodified-Since condition.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SOURCE_IF_UNMODIFIED_SINCE: 'x-ms-source-if-unmodified-since',\r",
									"\r",
									"    /**\r",
									"    * The header for data ranges.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    STORAGE_RANGE: 'x-ms-range',\r",
									"\r",
									"    /**\r",
									"    * The header for storage version.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    STORAGE_VERSION: 'x-ms-version',\r",
									"\r",
									"    /**\r",
									"    * The current storage version header value.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    TARGET_STORAGE_VERSION: '2016-05-31',\r",
									"\r",
									"    /**\r",
									"    * The UserAgent header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    USER_AGENT: 'user-agent',\r",
									"\r",
									"    /**\r",
									"    * The pop receipt header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    POP_RECEIPT: 'x-ms-popreceipt',\r",
									"\r",
									"    /**\r",
									"    * The time next visibile header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    TIME_NEXT_VISIBLE: 'x-ms-time-next-visible',\r",
									"\r",
									"    /**\r",
									"    * The approximate message counter header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    APPROXIMATE_MESSAGE_COUNT: 'x-ms-approximate-message-count',\r",
									"\r",
									"    /**\r",
									"    * The lease action header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LEASE_ACTION: 'x-ms-lease-action',\r",
									"\r",
									"    /**\r",
									"    * The accept header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ACCEPT: 'accept',\r",
									"\r",
									"    /**\r",
									"    * The accept charset header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ACCEPT_CHARSET: 'Accept-Charset',\r",
									"\r",
									"    /**\r",
									"    * The host header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    HOST: 'host',\r",
									"\r",
									"    /**\r",
									"    * The correlation identifier header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CORRELATION_ID: 'x-ms-correlation-id',\r",
									"\r",
									"    /**\r",
									"    * The group identifier header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    GROUP_ID: 'x-ms-group-id',\r",
									"\r",
									"    /**\r",
									"    * The share quota header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SHARE_QUOTA: 'x-ms-share-quota',\r",
									"\r",
									"    /**\r",
									"    * The max blob size header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    BLOB_CONDITION_MAX_SIZE: 'x-ms-blob-condition-maxsize',\r",
									"\r",
									"    /**\r",
									"    * The append blob position header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    BLOB_CONDITION_APPEND_POSITION: 'x-ms-blob-condition-appendpos',\r",
									"\r",
									"    /**\r",
									"    * The append blob append offset header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    BLOB_APPEND_OFFSET: 'x-ms-blob-append-offset',\r",
									"\r",
									"    /**\r",
									"    * The append blob committed block header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    BLOB_COMMITTED_BLOCK_COUNT: 'x-ms-blob-committed-block-count',\r",
									"\r",
									"    /**\r",
									"    * If the data and application metadata are completely encrypted using the specified algorithm.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {bool}\r",
									"    */\r",
									"    SERVER_ENCRYPTED: 'x-ms-server-encrypted',\r",
									"  },\r",
									"\r",
									"  QueryStringConstants: {\r",
									"\r",
									"    /**\r",
									"    * Query component for SAS API version.\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    API_VERSION: 'api-version',\r",
									"\r",
									"    /**\r",
									"    * The Comp value.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    COMP: 'comp',\r",
									"\r",
									"    /**\r",
									"    * The Res Type.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    RESTYPE: 'restype',\r",
									"\r",
									"    /**\r",
									"    * The copy Id.\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    COPY_ID: 'copyid',\r",
									"\r",
									"    /**\r",
									"    * The Snapshot value.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SNAPSHOT: 'snapshot',\r",
									"\r",
									"    /**\r",
									"    * The previous snapshot value.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PREV_SNAPSHOT: 'prevsnapshot',\r",
									"\r",
									"    /**\r",
									"    * The timeout value.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    TIMEOUT: 'timeout',\r",
									"\r",
									"    /**\r",
									"    * The signed start time query string argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_START: 'st',\r",
									"\r",
									"    /**\r",
									"    * The signed expiry time query string argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_EXPIRY: 'se',\r",
									"\r",
									"    /**\r",
									"    * The signed resource query string argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_RESOURCE: 'sr',\r",
									"\r",
									"    /**\r",
									"    * The signed permissions query string argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_PERMISSIONS: 'sp',\r",
									"\r",
									"    /**\r",
									"    * The signed services query string argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_SERVICES: 'ss',\r",
									"\r",
									"    /**\r",
									"    * The signed resource types query string argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_RESOURCE_TYPES: 'srt',\r",
									"\r",
									"    /**\r",
									"    * The signed IP query string argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_IP: 'sip',\r",
									"\r",
									"    /**\r",
									"    * The signed protocol query string argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_PROTOCOL: 'spr',\r",
									"\r",
									"    /**\r",
									"    * The signed identifier query string argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_IDENTIFIER: 'si',\r",
									"\r",
									"    /**\r",
									"    * The signature query string argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNATURE: 'sig',\r",
									"\r",
									"    /**\r",
									"    * The signed version argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_VERSION: 'sv',\r",
									"\r",
									"    /**\r",
									"    * The cache control argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CACHE_CONTROL: 'rscc',\r",
									"\r",
									"    /**\r",
									"    * The content type argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_TYPE: 'rsct',\r",
									"\r",
									"    /**\r",
									"    * The content encoding argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_ENCODING: 'rsce',\r",
									"\r",
									"    /**\r",
									"    * The content language argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_LANGUAGE: 'rscl',\r",
									"\r",
									"    /**\r",
									"    * The content disposition argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_DISPOSITION: 'rscd',\r",
									"\r",
									"    /**\r",
									"    * The block identifier query string argument for blob service.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOCK_ID: 'blockid',\r",
									"\r",
									"    /**\r",
									"    * The block list type query string argument for blob service.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOCK_LIST_TYPE: 'blocklisttype',\r",
									"\r",
									"    /**\r",
									"    * The prefix query string argument for listing operations.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PREFIX: 'prefix',\r",
									"\r",
									"    /**\r",
									"    * The marker query string argument for listing operations.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    MARKER: 'marker',\r",
									"\r",
									"    /**\r",
									"    * The maxresults query string argument for listing operations.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    MAX_RESULTS: 'maxresults',\r",
									"\r",
									"    /**\r",
									"    * The delimiter query string argument for listing operations.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    DELIMITER: 'delimiter',\r",
									"\r",
									"    /**\r",
									"    * The include query string argument for listing operations.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    INCLUDE: 'include',\r",
									"\r",
									"    /**\r",
									"    * The peekonly query string argument for queue service.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PEEK_ONLY: 'peekonly',\r",
									"\r",
									"    /**\r",
									"    * The numofmessages query string argument for queue service.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    NUM_OF_MESSAGES: 'numofmessages',\r",
									"\r",
									"    /**\r",
									"    * The popreceipt query string argument for queue service.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    POP_RECEIPT: 'popreceipt',\r",
									"\r",
									"    /**\r",
									"    * The visibilitytimeout query string argument for queue service.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    VISIBILITY_TIMEOUT: 'visibilitytimeout',\r",
									"\r",
									"    /**\r",
									"    * The messagettl query string argument for queue service.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    MESSAGE_TTL: 'messagettl',\r",
									"\r",
									"    /**\r",
									"    * The select query string argument.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SELECT: '$select',\r",
									"\r",
									"    /**\r",
									"    * The filter query string argument.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    FILTER: '$filter',\r",
									"\r",
									"    /**\r",
									"    * The top query string argument.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    TOP: '$top',\r",
									"\r",
									"    /**\r",
									"    * The skip query string argument.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SKIP: '$skip',\r",
									"\r",
									"    /**\r",
									"    * The next partition key query string argument for table service.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    NEXT_PARTITION_KEY: 'NextPartitionKey',\r",
									"\r",
									"    /**\r",
									"    * The next row key query string argument for table service.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    NEXT_ROW_KEY: 'NextRowKey',\r",
									"\r",
									"    /**\r",
									"    * The lock identifier for service bus messages.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LOCK_ID: 'lockid',\r",
									"\r",
									"    /**\r",
									"    * The table name for table SAS URI's.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    TABLENAME: 'tn',\r",
									"\r",
									"    /**\r",
									"    * The starting Partition Key for tableSAS URI's.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    STARTPK: 'spk',\r",
									"\r",
									"    /**\r",
									"    * The starting Partition Key for tableSAS URI's.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    STARTRK: 'srk',\r",
									"\r",
									"    /**\r",
									"    * The ending Partition Key for tableSAS URI's.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ENDPK: 'epk',\r",
									"\r",
									"    /**\r",
									"    * The ending Partition Key for tableSAS URI's.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ENDRK: 'erk'\r",
									"  },\r",
									"\r",
									"  StorageServiceClientConstants: {\r",
									"    /**\r",
									"    * The default protocol.\r",
									"    */\r",
									"    DEFAULT_PROTOCOL: 'https:',\r",
									"\r",
									"    /*\r",
									"    * Used environment variables.\r",
									"    * @enum {string}\r",
									"    */\r",
									"    EnvironmentVariables: {\r",
									"      AZURE_STORAGE_ACCOUNT: 'AZURE_STORAGE_ACCOUNT',\r",
									"      AZURE_STORAGE_ACCESS_KEY: 'AZURE_STORAGE_ACCESS_KEY',\r",
									"      AZURE_STORAGE_DNS_SUFFIX: 'AZURE_STORAGE_DNS_SUFFIX',\r",
									"      AZURE_STORAGE_CONNECTION_STRING: 'AZURE_STORAGE_CONNECTION_STRING',\r",
									"      HTTP_PROXY: 'HTTP_PROXY',\r",
									"      HTTPS_PROXY: 'HTTPS_PROXY',\r",
									"      EMULATED: 'EMULATED',\r",
									"    },\r",
									"\r",
									"    /**\r",
									"    * Default credentials.\r",
									"    */\r",
									"    DEVSTORE_STORAGE_ACCOUNT: 'devstoreaccount1',\r",
									"    DEVSTORE_STORAGE_ACCESS_KEY: 'Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==',\r",
									"\r",
									"    /**\r",
									"    * The development store URI.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    DEV_STORE_URI: 'http://127.0.0.1',\r",
									"\r",
									"    /**\r",
									"    * Development ServiceClient URLs.\r",
									"    */\r",
									"    DEVSTORE_DEFAULT_PROTOCOL: 'http://',\r",
									"    DEVSTORE_BLOB_HOST: '127.0.0.1:10000',\r",
									"    DEVSTORE_QUEUE_HOST: '127.0.0.1:10001',\r",
									"    DEVSTORE_TABLE_HOST: '127.0.0.1:10002',\r",
									"\r",
									"    /**\r",
									"    * Production ServiceClient URLs.\r",
									"    */\r",
									"    CLOUD_BLOB_HOST: 'blob.' + storageDnsSuffix,\r",
									"    CLOUD_QUEUE_HOST: 'queue.' + storageDnsSuffix,\r",
									"    CLOUD_TABLE_HOST: 'table.' + storageDnsSuffix,\r",
									"    CLOUD_FILE_HOST: 'file.' + storageDnsSuffix\r",
									"  },\r",
									"\r",
									"  HttpConstants: {\r",
									"    /**\r",
									"    * Http Verbs\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    HttpVerbs: {\r",
									"      PUT: 'PUT',\r",
									"      GET: 'GET',\r",
									"      DELETE: 'DELETE',\r",
									"      POST: 'POST',\r",
									"      MERGE: 'MERGE',\r",
									"      HEAD: 'HEAD'\r",
									"    },\r",
									"\r",
									"    /**\r",
									"    * Response codes.\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {int}\r",
									"    */\r",
									"    HttpResponseCodes: {\r",
									"      Ok: 200,\r",
									"      Created: 201,\r",
									"      Accepted: 202,\r",
									"      NoContent: 204,\r",
									"      PartialContent: 206,\r",
									"      BadRequest: 400,\r",
									"      Unauthorized: 401,\r",
									"      Forbidden: 403,\r",
									"      NotFound: 404,\r",
									"      Conflict: 409,\r",
									"      LengthRequired: 411,\r",
									"      PreconditionFailed: 412\r",
									"    }\r",
									"  },\r",
									"\r",
									"  CompatibleVersionConstants: {\r",
									"    /**\r",
									"    * Constant for the 2013-08-15 version.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    AUGUST_2013: '2013-08-15',\r",
									"\r",
									"    /**\r",
									"    * Constant for the 2012-02-12 version.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    FEBRUARY_2012: '2012-02-12'\r",
									"  },\r",
									"\r",
									"  BlobErrorCodeStrings: {\r",
									"    INVALID_BLOCK_ID: 'InvalidBlockId',\r",
									"    BLOB_NOT_FOUND: 'BlobNotFound',\r",
									"    BLOB_ALREADY_EXISTS: 'BlobAlreadyExists',\r",
									"    CONTAINER_ALREADY_EXISTS: 'ContainerAlreadyExists',\r",
									"    CONTAINER_NOT_FOUND: 'ContainerNotFound',\r",
									"    INVALID_BLOB_OR_BLOCK: 'InvalidBlobOrBlock',\r",
									"    INVALID_BLOCK_LIST: 'InvalidBlockList'\r",
									"  },\r",
									"\r",
									"  FileErrorCodeStrings: {\r",
									"    SHARE_ALREADY_EXISTS: 'ShareAlreadyExists',\r",
									"    SHARE_NOT_FOUND: 'ShareNotFound',\r",
									"    FILE_NOT_FOUND: 'FileNotFound'\r",
									"  },\r",
									"\r",
									"  QueueErrorCodeStrings: {\r",
									"    QUEUE_NOT_FOUND: 'QueueNotFound',\r",
									"    QUEUE_DISABLED: 'QueueDisabled',\r",
									"    QUEUE_ALREADY_EXISTS: 'QueueAlreadyExists',\r",
									"    QUEUE_NOT_EMPTY: 'QueueNotEmpty',\r",
									"    QUEUE_BEING_DELETED: 'QueueBeingDeleted',\r",
									"    POP_RECEIPT_MISMATCH: 'PopReceiptMismatch',\r",
									"    INVALID_PARAMETER: 'InvalidParameter',\r",
									"    MESSAGE_NOT_FOUND: 'MessageNotFound',\r",
									"    MESSAGE_TOO_LARGE: 'MessageTooLarge',\r",
									"    INVALID_MARKER: 'InvalidMarker'\r",
									"  },\r",
									"\r",
									"  /**\r",
									"  * Constants for storage error strings\r",
									"  *\r",
									"  * More details are at: http://msdn.microsoft.com/en-us/library/azure/dd179357.aspx\r",
									"  */\r",
									"  StorageErrorCodeStrings: {\r",
									"    // Not Modified (304): The condition specified in the conditional header(s) was not met for a read operation.\r",
									"    // Precondition Failed (412): The condition specified in the conditional header(s) was not met for a write operation.\r",
									"    CONDITION_NOT_MET: 'ConditionNotMet',\r",
									"    // Bad Request (400): A required HTTP header was not specified.\r",
									"    MISSING_REQUIRED_HEADER: 'MissingRequiredHeader',\r",
									"    // Bad Request (400): A required XML node was not specified in the request body.\r",
									"    MISSING_REQUIRED_XML_NODE: 'MissingRequiredXmlNode',\r",
									"    // Bad Request (400): One of the HTTP headers specified in the request is not supported.\r",
									"    UNSUPPORTED_HEADER: 'UnsupportedHeader',\r",
									"    // Bad Request (400): One of the XML nodes specified in the request body is not supported.\r",
									"    UNSUPPORTED_XML_NODE: 'UnsupportedXmlNode',\r",
									"    // Bad Request (400): The value provided for one of the HTTP headers was not in the correct format.\r",
									"    INVALID_HEADER_VALUE: 'InvalidHeaderValue',\r",
									"    // Bad Request (400): The value provided for one of the XML nodes in the request body was not in the correct format.\r",
									"    INVALID_XML_NODE_VALUE: 'InvalidXmlNodeValue',\r",
									"    // Bad Request (400): A required query parameter was not specified for this request.\r",
									"    MISSING_REQUIRED_QUERY_PARAMETER: 'MissingRequiredQueryParameter',\r",
									"    // Bad Request (400): One of the query parameters specified in the request URI is not supported.\r",
									"    UNSUPPORTED_QUERY_PARAMETER: 'UnsupportedQueryParameter',\r",
									"    // Bad Request (400): An invalid value was specified for one of the query parameters in the request URI.\r",
									"    INVALID_QUERY_PARAMETER_VALUE: 'InvalidQueryParameterValue',\r",
									"    // Bad Request (400): A query parameter specified in the request URI is outside the permissible range.\r",
									"    OUT_OF_RANGE_QUERY_PARAMETER_VALUE: 'OutOfRangeQueryParameterValue',\r",
									"    // Bad Request (400): The url in the request could not be parsed.\r",
									"    REQUEST_URL_FAILED_TO_PARSE: 'RequestUrlFailedToParse',\r",
									"    // Bad Request (400): The requested URI does not represent any resource on the server.\r",
									"    INVALID_URI: 'InvalidUri',\r",
									"    // Bad Request (400): The HTTP verb specified was not recognized by the server.\r",
									"    INVALID_HTTP_VERB: 'InvalidHttpVerb',\r",
									"    // Bad Request (400): The key for one of the metadata key-value pairs is empty.\r",
									"    EMPTY_METADATA_KEY: 'EmptyMetadataKey',\r",
									"    // Bad Request (400): The specified XML is not syntactically valid.\r",
									"    INVALID_XML_DOCUMENT: 'InvalidXmlDocument',\r",
									"    // Bad Request (400): The MD5 value specified in the request did not match the MD5 value calculated by the server.\r",
									"    MD5_MISMATCH: 'Md5Mismatch',\r",
									"    // Bad Request (400): The MD5 value specified in the request is invalid. The MD5 value must be 128 bits and Base64-encoded.\r",
									"    INVALID_MD5: 'InvalidMd5',\r",
									"    // Bad Request (400): One of the request inputs is out of range.\r",
									"    OUT_OF_RANGE_INPUT: 'OutOfRangeInput',\r",
									"    // Bad Request (400): The authentication information was not provided in the correct format. Verify the value of Authorization header.\r",
									"    INVALID_AUTHENTICATION_INFO: 'InvalidAuthenticationInfo',\r",
									"    // Bad Request (400): One of the request inputs is not valid.\r",
									"    INVALID_INPUT: 'InvalidInput',\r",
									"    // Bad Request (400): The specified metadata is invalid. It includes characters that are not permitted.\r",
									"    INVALID_METADATA: 'InvalidMetadata',\r",
									"    // Bad Request (400): The specifed resource name contains invalid characters.\r",
									"    INVALID_RESOURCE_NAME: 'InvalidResourceName',\r",
									"    // Bad Request (400): The size of the specified metadata exceeds the maximum size permitted.\r",
									"    METADATA_TOO_LARGE: 'MetadataTooLarge',\r",
									"    // Bad Request (400): Condition headers are not supported.\r",
									"    CONDITION_HEADER_NOT_SUPPORTED: 'ConditionHeadersNotSupported',\r",
									"    // Bad Request (400): Multiple condition headers are not supported.\r",
									"    MULTIPLE_CONDITION_HEADER_NOT_SUPPORTED: 'MultipleConditionHeadersNotSupported',\r",
									"    // Forbidden (403): Server failed to authenticate the request. Make sure the value of the Authorization header is formed correctly including the signature.\r",
									"    AUTHENTICATION_FAILED: 'AuthenticationFailed',\r",
									"    // Forbidden (403): Read-access geo-redundant replication is not enabled for the account.\r",
									"    // Forbidden (403): Write operations to the secondary location are not allowed.\r",
									"    // Forbidden (403): The account being accessed does not have sufficient permissions to execute this operation.\r",
									"    INSUFFICIENT_ACCOUNT_PERMISSIONS: 'InsufficientAccountPermissions',\r",
									"    // Not Found (404): The specified resource does not exist.\r",
									"    RESOURCE_NOT_FOUND: 'ResourceNotFound',\r",
									"    // Forbidden (403): The specified account is disabled.\r",
									"    ACCOUNT_IS_DISABLED: 'AccountIsDisabled',\r",
									"    // Method Not Allowed (405): The resource doesn't support the specified HTTP verb.\r",
									"    UNSUPPORTED_HTTP_VERB: 'UnsupportedHttpVerb',\r",
									"    // Conflict (409): The specified account already exists. \r",
									"    ACCOUNT_ALREADY_EXISTS: 'AccountAlreadyExists',\r",
									"    // Conflict (409): The specified account is in the process of being created.\r",
									"    ACCOUNT_BEING_CREATED: 'AccountBeingCreated',\r",
									"    // Conflict (409): The specified resource already exists.\r",
									"    RESOURCE_ALREADY_EXISTS: 'ResourceAlreadyExists',\r",
									"    // Conflict (409): The specified resource type does not match the type of the existing resource.\r",
									"    RESOURCE_TYPE_MISMATCH: 'ResourceTypeMismatch',\r",
									"    // Length Required (411): The Content-Length header was not specified.\r",
									"    MISSING_CONTENT_LENGTH_HEADER: 'MissingContentLengthHeader',\r",
									"    // Request Entity Too Large (413): The size of the request body exceeds the maximum size permitted.\r",
									"    REQUEST_BODY_TOO_LARGE: 'RequestBodyTooLarge',\r",
									"    // Requested Range Not Satisfiable (416): The range specified is invalid for the current size of the resource.\r",
									"    INVALID_RANGE: 'InvalidRange',\r",
									"    // Internal Server Error (500): The server encountered an internal error. Please retry the request.\r",
									"    INTERNAL_ERROR: 'InternalError',\r",
									"    // Internal Server Error (500): The operation could not be completed within the permitted time.\r",
									"    OPERATION_TIMED_OUT: 'OperationTimedOut',\r",
									"    // Service Unavailable (503): The server is currently unable to receive requests. Please retry your request. \r",
									"    SERVER_BUSY: 'ServerBusy',\r",
									"\r",
									"    // Legacy error code strings\r",
									"    UPDATE_CONDITION_NOT_SATISFIED: 'UpdateConditionNotSatisfied',\r",
									"    CONTAINER_NOT_FOUND: 'ContainerNotFound',\r",
									"    CONTAINER_ALREADY_EXISTS: 'ContainerAlreadyExists',\r",
									"    CONTAINER_DISABLED: 'ContainerDisabled',\r",
									"    CONTAINER_BEING_DELETED: 'ContainerBeingDeleted',\r",
									"  },\r",
									"\r",
									"  TableErrorCodeStrings: {\r",
									"    XMETHOD_NOT_USING_POST: 'XMethodNotUsingPost',\r",
									"    XMETHOD_INCORRECT_VALUE: 'XMethodIncorrectValue',\r",
									"    XMETHOD_INCORRECT_COUNT: 'XMethodIncorrectCount',\r",
									"    TABLE_HAS_NO_PROPERTIES: 'TableHasNoProperties',\r",
									"    DUPLICATE_PROPERTIES_SPECIFIED: 'DuplicatePropertiesSpecified',\r",
									"    TABLE_HAS_NO_SUCH_PROPERTY: 'TableHasNoSuchProperty',\r",
									"    DUPLICATE_KEY_PROPERTY_SPECIFIED: 'DuplicateKeyPropertySpecified',\r",
									"    TABLE_ALREADY_EXISTS: 'TableAlreadyExists',\r",
									"    TABLE_NOT_FOUND: 'TableNotFound',\r",
									"    ENTITY_NOT_FOUND: 'EntityNotFound',\r",
									"    ENTITY_ALREADY_EXISTS: 'EntityAlreadyExists',\r",
									"    PARTITION_KEY_NOT_SPECIFIED: 'PartitionKeyNotSpecified',\r",
									"    OPERATOR_INVALID: 'OperatorInvalid',\r",
									"    UPDATE_CONDITION_NOT_SATISFIED: 'UpdateConditionNotSatisfied',\r",
									"    PROPERTIES_NEED_VALUE: 'PropertiesNeedValue',\r",
									"    PARTITION_KEY_PROPERTY_CANNOT_BE_UPDATED: 'PartitionKeyPropertyCannotBeUpdated',\r",
									"    TOO_MANY_PROPERTIES: 'TooManyProperties',\r",
									"    ENTITY_TOO_LARGE: 'EntityTooLarge',\r",
									"    PROPERTY_VALUE_TOO_LARGE: 'PropertyValueTooLarge',\r",
									"    INVALID_VALUE_TYPE: 'InvalidValueType',\r",
									"    TABLE_BEING_DELETED: 'TableBeingDeleted',\r",
									"    TABLE_SERVER_OUT_OF_MEMORY: 'TableServerOutOfMemory',\r",
									"    PRIMARY_KEY_PROPERTY_IS_INVALID_TYPE: 'PrimaryKeyPropertyIsInvalidType',\r",
									"    PROPERTY_NAME_TOO_LONG: 'PropertyNameTooLong',\r",
									"    PROPERTY_NAME_INVALID: 'PropertyNameInvalid',\r",
									"    BATCH_OPERATION_NOT_SUPPORTED: 'BatchOperationNotSupported',\r",
									"    JSON_FORMAT_NOT_SUPPORTED: 'JsonFormatNotSupported',\r",
									"    METHOD_NOT_ALLOWED: 'MethodNotAllowed',\r",
									"    NOT_IMPLEMENTED: 'NotImplemented'\r",
									"  },\r",
									"\r",
									"  ConnectionStringKeys: {\r",
									"    USE_DEVELOPMENT_STORAGE_NAME: 'UseDevelopmentStorage',\r",
									"    DEVELOPMENT_STORAGE_PROXY_URI_NAME: 'DevelopmentStorageProxyUri',\r",
									"    DEFAULT_ENDPOINTS_PROTOCOL_NAME: 'DefaultEndpointsProtocol',\r",
									"    ACCOUNT_NAME_NAME: 'AccountName',\r",
									"    ACCOUNT_KEY_NAME: 'AccountKey',\r",
									"    BLOB_ENDPOINT_NAME: 'BlobEndpoint',\r",
									"    FILE_ENDPOINT_NAME: 'FileEndpoint',\r",
									"    QUEUE_ENDPOINT_NAME: 'QueueEndpoint',\r",
									"    TABLE_ENDPOINT_NAME: 'TableEndpoint',\r",
									"    SHARED_ACCESS_SIGNATURE_NAME: 'SharedAccessSignature',\r",
									"    ENDPOINT_SUFFIX_NAME: 'EndpointSuffix',\r",
									"    BLOB_BASE_DNS_NAME: 'blob.core.windows.net',\r",
									"    FILE_BASE_DNS_NAME: 'file.core.windows.net',\r",
									"    QUEUE_BASE_DNS_NAME: 'queue.core.windows.net',\r",
									"    TABLE_BASE_DNS_NAME: 'table.core.windows.net'\r",
									"  }\r",
									"};\r",
									"\r",
									"var HeaderConstants = Constants.HeaderConstants;\r",
									"var QueryStringConstants = Constants.QueryStringConstants;\r",
									"var HeaderConstants = Constants.HeaderConstants;\r",
									"var CompatibleVersionConstants = Constants.CompatibleVersionConstants;\r",
									"\r",
									"var storageSas = new AzureStorageSas(accountName, accountKey);\r",
									"var signedQueryString = storageSas.getSignedQueryString(options);\r",
									"\r",
									"pm.globals.set(postmanEnvVariableName, signedQueryString);\r",
									"\r",
									"console.log(signedQueryString);"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(pm.info.requestName, () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.not.have.jsonBody('error');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"exportBlobContainerUri\": \"https://{{deviceStorageAccountName}}.blob.core.windows.net/{{deviceStorageExportContainer}}?{{deviceStorageSasQueryString}}\",\n  \"excludeKeys\": \"false\"\n}\n\n"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{iotHubResourceGroup}}/providers/Microsoft.Devices/IotHubs/{{iotHubName}}/exportDevices?api-version={{controlPlaneApiVersion}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								"{{subscriptionId}}",
								"resourceGroups",
								"{{iotHubResourceGroup}}",
								"providers",
								"Microsoft.Devices",
								"IotHubs",
								"{{iotHubName}}",
								"exportDevices"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{controlPlaneApiVersion}}",
									"equals": true
								}
							]
						},
						"description": "Exports all the device identities in the IoT hub identity registry to an Azure Storage blob container. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities."
					},
					"response": []
				},
				{
					"name": "Import, Update, Delete Devices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var accountName = pm.environment.get(\"deviceStorageAccountName\");\r",
									"var accountKey = pm.environment.get(\"deviceStorageAccountKey\");\r",
									"var containerName = pm.environment.get(\"deviceStorageImportContainer\");\r",
									"var postmanEnvVariableName = pm.environment.get(\"deviceStoragePostmanEnvVariableName\");\r",
									"\r",
									"var options = {\r",
									"  expiryPeriod: 60,\r",
									"  permissions: 'rwd',\r",
									"  serviceType: 'blob',\r",
									"  container: containerName,\r",
									"  blob: '',\r",
									"  resourceType: 'c',\r",
									"  sasVersion: '2016-05-31'\r",
									"};\r",
									"\r",
									"function AzureStorageSas(storageAccount, storageAccessKey, usePathStyleUri) {\r",
									"  this.storageAccount = storageAccount;\r",
									"  this.storageAccessKey = storageAccessKey;\r",
									"  this.usePathStyleUri = usePathStyleUri;\r",
									"}\r",
									"\r",
									"AzureStorageSas.prototype.generateAccountSignedQueryString = function (sharedAccessPolicy) {\r",
									"  var addIfNotNull = function (queryString, name, value) {\r",
									"    if (!objectIsNull(name) && !objectIsNull(value)) {\r",
									"      queryString[name] = value;\r",
									"    }\r",
									"  };\r",
									"\r",
									"  var formatAccessPolicyDates = function (accessPolicy) {\r",
									"    if (!objectIsNull(accessPolicy.Start)) {\r",
									"      if (!_.isDate(accessPolicy.Start)) {\r",
									"        accessPolicy.Start = new Date(accessPolicy.Start);\r",
									"      }\r",
									"\r",
									"      accessPolicy.Start = truncatedISO8061Date(accessPolicy.Start);\r",
									"    }\r",
									"\r",
									"    if (!objectIsNull(accessPolicy.Expiry)) {\r",
									"      if (!_.isDate(accessPolicy.Expiry)) {\r",
									"        accessPolicy.Expiry = new Date(accessPolicy.Expiry);\r",
									"      }\r",
									"\r",
									"      accessPolicy.Expiry = truncatedISO8061Date(accessPolicy.Expiry);\r",
									"    }\r",
									"  };\r",
									"\r",
									"  var queryString = {};\r",
									"\r",
									"  addIfNotNull(queryString, QueryStringConstants.SIGNED_VERSION, HeaderConstants.TARGET_STORAGE_VERSION);\r",
									"\r",
									"  // add shared access policy params\r",
									"  if (sharedAccessPolicy.AccessPolicy) {\r",
									"    formatAccessPolicyDates(sharedAccessPolicy.AccessPolicy);\r",
									"\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_SERVICES, sharedAccessPolicy.AccessPolicy.Services);\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_RESOURCE_TYPES, sharedAccessPolicy.AccessPolicy.ResourceTypes);\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_PERMISSIONS, sharedAccessPolicy.AccessPolicy.Permissions);\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_START, sharedAccessPolicy.AccessPolicy.Start);\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_EXPIRY, sharedAccessPolicy.AccessPolicy.Expiry);\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_IP, sharedAccessPolicy.AccessPolicy.IPAddressOrRange);\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_PROTOCOL, sharedAccessPolicy.AccessPolicy.Protocols);\r",
									"  }\r",
									"\r",
									"  // add signature\r",
									"  addIfNotNull(queryString, QueryStringConstants.SIGNATURE, this._generateAccountSharedAccessSignature(sharedAccessPolicy));\r",
									"\r",
									"  return this.queryStringStringify(queryString);\r",
									"};\r",
									"\r",
									"AzureStorageSas.prototype._generateAccountSharedAccessSignature = function (sharedAccessPolicy) {\r",
									"  var getvalueToAppend = function (value, noNewLine) {\r",
									"    var returnValue = '';\r",
									"    if (!objectIsNull(value)) {\r",
									"      returnValue = value;\r",
									"    }\r",
									"\r",
									"    if (noNewLine !== true) {\r",
									"      returnValue += '\\n';\r",
									"    }\r",
									"\r",
									"    return returnValue;\r",
									"  }.bind(this);\r",
									"\r",
									"  var stringToSign = getvalueToAppend(this.storageAccount) +\r",
									"    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Permissions : '') +\r",
									"    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Services : '') +\r",
									"    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.ResourceTypes : '') +\r",
									"    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Start : '') +\r",
									"    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Expiry : '') +\r",
									"    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.IPAddressOrRange : '') +\r",
									"    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Protocols : '') +\r",
									"    getvalueToAppend(HeaderConstants.TARGET_STORAGE_VERSION);\r",
									"\r",
									"  return this.signer.sign(stringToSign);\r",
									"};\r",
									"\r",
									"AzureStorageSas.prototype.signRequest = function (webResource, callback) {\r",
									"  var getvalueToAppend = function (value, headerName) {\r",
									"    // Do not sign content-length 0 in 2014-08-16 and later\r",
									"    if (headerName === HeaderConstants.CONTENT_LENGTH && (objectIsNull(value[headerName]) || value[headerName].toString() === '0')) {\r",
									"      return '\\n';\r",
									"    } else if (objectIsNull(value) || objectIsNull(value[headerName])) {\r",
									"      return '\\n';\r",
									"    } else {\r",
									"      return value[headerName] + '\\n';\r",
									"    }\r",
									"  };\r",
									"\r",
									"  var stringToSign =\r",
									"    webResource.method + '\\n' +\r",
									"    getvalueToAppend(webResource.headers, HeaderConstants.CONTENT_ENCODING) +\r",
									"    getvalueToAppend(webResource.headers, HeaderConstants.CONTENT_LANGUAGE) +\r",
									"    getvalueToAppend(webResource.headers, HeaderConstants.CONTENT_LENGTH) +\r",
									"    getvalueToAppend(webResource.headers, HeaderConstants.CONTENT_MD5) +\r",
									"    getvalueToAppend(webResource.headers, HeaderConstants.CONTENT_TYPE) +\r",
									"    getvalueToAppend(webResource.headers, HeaderConstants.DATE) +\r",
									"    getvalueToAppend(webResource.headers, HeaderConstants.IF_MODIFIED_SINCE) +\r",
									"    getvalueToAppend(webResource.headers, HeaderConstants.IF_MATCH) +\r",
									"    getvalueToAppend(webResource.headers, HeaderConstants.IF_NONE_MATCH) +\r",
									"    getvalueToAppend(webResource.headers, HeaderConstants.IF_UNMODIFIED_SINCE) +\r",
									"    getvalueToAppend(webResource.headers, HeaderConstants.RANGE) +\r",
									"    this._getCanonicalizedHeaders(webResource) +\r",
									"    this._getCanonicalizedResource(webResource);\r",
									"\r",
									"  var signature = this.signer.sign(stringToSign);\r",
									"\r",
									"  webResource.withHeader(HeaderConstants.AUTHORIZATION, 'AzureStorageSas ' + this.storageAccount + ':' + signature);\r",
									"  callback(null);\r",
									"};\r",
									"\r",
									"AzureStorageSas.prototype._getCanonicalizedResource = function (webResource) {\r",
									"  var path = '/';\r",
									"  if (webResource.path) {\r",
									"    path = webResource.path;\r",
									"  }\r",
									"\r",
									"  var canonicalizedResource = '/' + this.storageAccount + path;\r",
									"\r",
									"  // Get the raw query string values for signing\r",
									"  var queryStringValues = webResource.queryString;\r",
									"\r",
									"  // Build the canonicalized resource by sorting the values by name.\r",
									"  if (queryStringValues) {\r",
									"    var paramNames = [];\r",
									"    Object.keys(queryStringValues).forEach(function (n) {\r",
									"      paramNames.push(n);\r",
									"    });\r",
									"\r",
									"    paramNames = paramNames.sort();\r",
									"    Object.keys(paramNames).forEach(function (name) {\r",
									"      canonicalizedResource += '\\n' + paramNames[name] + ':' + queryStringValues[paramNames[name]];\r",
									"    });\r",
									"  }\r",
									"\r",
									"  return canonicalizedResource;\r",
									"};\r",
									"\r",
									"AzureStorageSas.prototype._getCanonicalizedHeaders = function (webResource) {\r",
									"  // Build canonicalized headers\r",
									"  var canonicalizedHeaders = '';\r",
									"  if (webResource.headers) {\r",
									"    var canonicalizedHeadersArray = [];\r",
									"    for (var header in webResource.headers) {\r",
									"      if (header.indexOf(HeaderConstants.PREFIX_FOR_STORAGE) === 0) {\r",
									"        var headerItem = { canonicalized: header.toLowerCase(), original: header };\r",
									"        canonicalizedHeadersArray.push(headerItem);\r",
									"      }\r",
									"    }\r",
									"\r",
									"    canonicalizedHeadersArray.sort(function (a, b) { return a.canonicalized.localeCompare(b.canonicalized); });\r",
									"\r",
									"    _.each(canonicalizedHeadersArray, function (currentHeaderItem) {\r",
									"      var value = webResource.headers[currentHeaderItem.original];\r",
									"      if (!IsNullOrEmptyOrUndefinedOrWhiteSpace(value)) {\r",
									"        canonicalizedHeaders += currentHeaderItem.canonicalized + ':' + value + '\\n';\r",
									"      } else {\r",
									"        canonicalizedHeaders += currentHeaderItem.canonicalized + ':\\n';\r",
									"      }\r",
									"    });\r",
									"  }\r",
									"\r",
									"  return canonicalizedHeaders;\r",
									"};\r",
									"\r",
									"AzureStorageSas.prototype.getSignedQueryString = function (options) {\r",
									"  var resourceName = this.createResourceName(options.container, options.blob, true);\r",
									"  var startDate = new Date();\r",
									"  startDate.setMinutes(-10);\r",
									"  var expiryDate = new Date(startDate);\r",
									"  expiryDate.setMinutes(startDate.getMinutes() + options.expiryPeriod);\r",
									"\r",
									"  var sharedAccessPolicy = {\r",
									"    AccessPolicy: {\r",
									"      Permissions: options.permissions,\r",
									"      Start: startDate,\r",
									"      Expiry: expiryDate\r",
									"    }\r",
									"  };\r",
									"\r",
									"  return this.generateSignedQueryString(options.serviceType, resourceName, sharedAccessPolicy, options.sasVersion, { resourceType: options.resourceType });\r",
									"};\r",
									"\r",
									"AzureStorageSas.prototype.createResourceName = function (containerName, blobName, forSAS) {\r",
									"  // Resource name\r",
									"  if (blobName && !forSAS) {\r",
									"    blobName = encodeURIComponent(blobName);\r",
									"    blobName = blobName.replace(/%2F/g, '/');\r",
									"    blobName = blobName.replace(/%5C/g, '/');\r",
									"    blobName = blobName.replace(/\\+/g, '%20');\r",
									"  }\r",
									"\r",
									"  // return URI encoded resource name\r",
									"  if (blobName) {\r",
									"    return containerName + '/' + blobName;\r",
									"  }\r",
									"  else {\r",
									"    return containerName;\r",
									"  }\r",
									"};\r",
									"\r",
									"AzureStorageSas.prototype.generateSignedQueryString = function (serviceType, path, sharedAccessPolicy, sasVersion, args) {\r",
									"  var addIfNotNull = function (queryString, name, value) {\r",
									"    if (!this.objectIsNull(name) && !this.objectIsNull(value)) {\r",
									"      queryString[name] = value;\r",
									"    }\r",
									"  }.bind(this);\r",
									"\r",
									"  var formatAccessPolicyDates = function (accessPolicy) {\r",
									"    if (!this.objectIsNull(accessPolicy.Start)) {\r",
									"      if (!_.isDate(accessPolicy.Start)) {\r",
									"        accessPolicy.Start = new Date(accessPolicy.Start);\r",
									"      }\r",
									"\r",
									"      accessPolicy.Start = this.truncatedISO8061Date(accessPolicy.Start);\r",
									"    }\r",
									"\r",
									"    if (!this.objectIsNull(accessPolicy.Expiry)) {\r",
									"      if (!_.isDate(accessPolicy.Expiry)) {\r",
									"        accessPolicy.Expiry = new Date(accessPolicy.Expiry);\r",
									"      }\r",
									"\r",
									"      accessPolicy.Expiry = this.truncatedISO8061Date(accessPolicy.Expiry);\r",
									"    }\r",
									"  }.bind(this);\r",
									"\r",
									"  // set up optional args\r",
									"  var queryString;\r",
									"  var resourceType;\r",
									"  var headers;\r",
									"  var tableName;\r",
									"\r",
									"  if (args) {\r",
									"    queryString = args.queryString;\r",
									"    resourceType = args.resourceType;\r",
									"    tableName = args.tableName;\r",
									"    headers = args.headers;\r",
									"  }\r",
									"\r",
									"  if (!queryString) {\r",
									"    queryString = {};\r",
									"  }\r",
									"\r",
									"  // add shared access policy params\r",
									"  if (sharedAccessPolicy.AccessPolicy) {\r",
									"    formatAccessPolicyDates(sharedAccessPolicy.AccessPolicy);\r",
									"\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_START, sharedAccessPolicy.AccessPolicy.Start);\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_EXPIRY, sharedAccessPolicy.AccessPolicy.Expiry);\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_PERMISSIONS, sharedAccessPolicy.AccessPolicy.Permissions);\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_IP, sharedAccessPolicy.AccessPolicy.IPAddressOrRange);\r",
									"    addIfNotNull(queryString, QueryStringConstants.SIGNED_PROTOCOL, sharedAccessPolicy.AccessPolicy.Protocols);\r",
									"\r",
									"    // tables only\r",
									"    addIfNotNull(queryString, QueryStringConstants.STARTPK, sharedAccessPolicy.AccessPolicy.StartPk);\r",
									"    addIfNotNull(queryString, QueryStringConstants.ENDPK, sharedAccessPolicy.AccessPolicy.EndPk);\r",
									"    addIfNotNull(queryString, QueryStringConstants.STARTRK, sharedAccessPolicy.AccessPolicy.StartRk);\r",
									"    addIfNotNull(queryString, QueryStringConstants.ENDRK, sharedAccessPolicy.AccessPolicy.EndRk);\r",
									"  }\r",
									"\r",
									"  // validate and add version\r",
									"  var validatedSASVersionString = sasVersion; //validateVersion(sasVersion);\r",
									"  addIfNotNull(queryString, QueryStringConstants.SIGNED_VERSION, validatedSASVersionString);\r",
									"\r",
									"  // add signed identifier\r",
									"  addIfNotNull(queryString, QueryStringConstants.SIGNED_IDENTIFIER, sharedAccessPolicy.Id);\r",
									"\r",
									"  // blobs only\r",
									"  addIfNotNull(queryString, QueryStringConstants.SIGNED_RESOURCE, resourceType);\r",
									"  if (headers) {\r",
									"    addIfNotNull(queryString, QueryStringConstants.CACHE_CONTROL, headers.cacheControl);\r",
									"    addIfNotNull(queryString, QueryStringConstants.CONTENT_TYPE, headers.contentType);\r",
									"    addIfNotNull(queryString, QueryStringConstants.CONTENT_ENCODING, headers.contentEncoding);\r",
									"    addIfNotNull(queryString, QueryStringConstants.CONTENT_LANGUAGE, headers.contentLanguage);\r",
									"    addIfNotNull(queryString, QueryStringConstants.CONTENT_DISPOSITION, headers.contentDisposition);\r",
									"  }\r",
									"\r",
									"  // tables only\r",
									"  addIfNotNull(queryString, QueryStringConstants.TABLENAME, tableName);\r",
									"\r",
									"  // add signature\r",
									"  addIfNotNull(queryString, QueryStringConstants.SIGNATURE, this._generateSignature(serviceType, path, sharedAccessPolicy, validatedSASVersionString, { resourceType: resourceType, headers: headers, tableName: tableName }));\r",
									"\r",
									"  return this.queryStringStringify(queryString);\r",
									"};\r",
									"\r",
									"AzureStorageSas.prototype._generateSignature = function (serviceType, path, sharedAccessPolicy, sasVersion, args) {\r",
									"  var getvalueToAppend = function (value, noNewLine) {\r",
									"    var returnValue = '';\r",
									"    if (!this.objectIsNull(value)) {\r",
									"      returnValue = value;\r",
									"    }\r",
									"\r",
									"    if (noNewLine !== true) {\r",
									"      returnValue += '\\n';\r",
									"    }\r",
									"\r",
									"    return returnValue;\r",
									"  }.bind(this);\r",
									"\r",
									"  // set up optional args\r",
									"  var resourceType;\r",
									"  var tableName;\r",
									"  var headers;\r",
									"  if (args) {\r",
									"    resourceType = args.resourceType;\r",
									"    tableName = args.tableName;\r",
									"    headers = args.headers;\r",
									"  }\r",
									"\r",
									"  // Add leading slash to path\r",
									"  if (path.substr(0, 1) !== '/') {\r",
									"    path = '/' + path;\r",
									"  }\r",
									"\r",
									"  var canonicalizedResource;\r",
									"\r",
									"  canonicalizedResource = '/' + serviceType + '/' + this.storageAccount + path;\r",
									"\r",
									"  var stringToSign = getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Permissions : '') +\r",
									"    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Start : '') +\r",
									"    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Expiry : '') +\r",
									"    getvalueToAppend(canonicalizedResource) +\r",
									"    getvalueToAppend(sharedAccessPolicy.Id) +\r",
									"    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.IPAddressOrRange : '') +\r",
									"    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Protocols : '') +\r",
									"    sasVersion;\r",
									"\r",
									"  if (resourceType) {\r",
									"    stringToSign += '\\n' +\r",
									"      getvalueToAppend(headers ? headers.cacheControl : '') +\r",
									"      getvalueToAppend(headers ? headers.contentDisposition : '') +\r",
									"      getvalueToAppend(headers ? headers.contentEncoding : '') +\r",
									"      getvalueToAppend(headers ? headers.contentLanguage : '') +\r",
									"      getvalueToAppend(headers ? headers.contentType : '', true);\r",
									"  }\r",
									"\r",
									"\r",
									"  if (tableName) {\r",
									"    stringToSign += '\\n' +\r",
									"      getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.StartPk : '') +\r",
									"      getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.StartRk : '') +\r",
									"      getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.EndPk : '') +\r",
									"      getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.EndRk : '', true);\r",
									"  }\r",
									"\r",
									"  return this.signString(stringToSign);\r",
									"};\r",
									"\r",
									"AzureStorageSas.prototype.signString = function (stringToSign) {\r",
									"  var decodedKey = CryptoJS.enc.Base64.parse(this.storageAccessKey);\r",
									"  var hmac = CryptoJS.HmacSHA256(stringToSign, decodedKey); // The signature generated from the decodedKey\r",
									"  var digest = CryptoJS.enc.Base64.stringify(hmac);\r",
									"  return digest;\r",
									"}\r",
									"\r",
									"AzureStorageSas.prototype.objectIsNull = function (value) {\r",
									"  return _.isNull(value) || _.isUndefined(value);\r",
									"};\r",
									"\r",
									"AzureStorageSas.prototype.truncatedISO8061Date = function (date) {\r",
									"  var dateString = date.toISOString();\r",
									"  return dateString.substring(0, dateString.length - 5) + 'Z';\r",
									"};\r",
									"\r",
									"//AzureStorageSas.prototype.queryStringStringify = \r",
									"var stringifyPrimitive = function (v) {\r",
									"  switch (typeof v) {\r",
									"    case 'string':\r",
									"      return v;\r",
									"\r",
									"    case 'boolean':\r",
									"      return v ? 'true' : 'false';\r",
									"\r",
									"    case 'number':\r",
									"      return isFinite(v) ? v : '';\r",
									"\r",
									"    default:\r",
									"      return '';\r",
									"  }\r",
									"};\r",
									"\r",
									"AzureStorageSas.prototype.queryStringStringify = function (obj, sep, eq, name) {\r",
									"  sep = sep || '&';\r",
									"  eq = eq || '=';\r",
									"  if (obj === null) {\r",
									"    obj = undefined;\r",
									"  }\r",
									"\r",
									"  if (typeof obj === 'object') {\r",
									"    return Object.keys(obj).map(function (k) {\r",
									"      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\r",
									"      if (Array.isArray(obj[k])) {\r",
									"        return obj[k].map(function (v) {\r",
									"          return ks + encodeURIComponent(stringifyPrimitive(v));\r",
									"        }).join(sep);\r",
									"      } else {\r",
									"        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\r",
									"      }\r",
									"    }).join(sep);\r",
									"\r",
									"  }\r",
									"\r",
									"  if (!name) return '';\r",
									"  return encodeURIComponent(stringifyPrimitive(name)) + eq +\r",
									"    encodeURIComponent(stringifyPrimitive(obj));\r",
									"};\r",
									"\r",
									"var storageDnsSuffix = 'core.windows.net'; //process.env.AZURE_STORAGE_DNS_SUFFIX || 'core.windows.net';\r",
									"\r",
									"/**\r",
									"* Defines constants.\r",
									"*/\r",
									"var Constants = {\r",
									"  /*\r",
									"  * Specifies the value to use for UserAgent header.\r",
									"  */\r",
									"  USER_AGENT_PRODUCT_NAME: 'Azure-Storage',\r",
									"\r",
									"  /*\r",
									"  * Specifies the value to use for UserAgent header.\r",
									"  */\r",
									"  USER_AGENT_PRODUCT_VERSION: '2.1.0',\r",
									"\r",
									"  /**\r",
									"  * The number of default concurrent requests for parallel operation.\r",
									"  *\r",
									"  * @const\r",
									"  * @type {string}\r",
									"  */\r",
									"  DEFAULT_PARALLEL_OPERATION_THREAD_COUNT: 5,\r",
									"\r",
									"  /**\r",
									"  * Constant representing a kilobyte (Non-SI version).\r",
									"  *\r",
									"  * @const\r",
									"  * @type {string}\r",
									"  */\r",
									"  KB: 1024,\r",
									"\r",
									"  /**\r",
									"  * Constant representing a megabyte (Non-SI version).\r",
									"  *\r",
									"  * @const\r",
									"  * @type {string}\r",
									"  */\r",
									"  MB: 1024 * 1024,\r",
									"\r",
									"  /**\r",
									"  * Constant representing a gigabyte (Non-SI version).\r",
									"  *\r",
									"  * @const\r",
									"  * @type {string}\r",
									"  */\r",
									"  GB: 1024 * 1024 * 1024,\r",
									"\r",
									"  /**\r",
									"  * Specifies HTTP.\r",
									"  *\r",
									"  * @const\r",
									"  * @type {string}\r",
									"  */\r",
									"  HTTP: 'http:',\r",
									"\r",
									"  /**\r",
									"  * Specifies HTTPS.\r",
									"  *\r",
									"  * @const\r",
									"  * @type {string}\r",
									"  */\r",
									"  HTTPS: 'https:',\r",
									"\r",
									"  /**\r",
									"  * Default HTTP port.\r",
									"  *\r",
									"  * @const\r",
									"  * @type {int}\r",
									"  */\r",
									"  DEFAULT_HTTP_PORT: 80,\r",
									"\r",
									"  /**\r",
									"  * Default HTTPS port.\r",
									"  *\r",
									"  * @const\r",
									"  * @type {int}\r",
									"  */\r",
									"  DEFAULT_HTTPS_PORT: 443,\r",
									"\r",
									"  /**\r",
									"   * Default client request timeout in milliseconds.\r",
									"   * Integer containing the number of milliseconds to wait for a server to send response headers (and start the response body) before aborting the request.\r",
									"   * 2 minutes by default.\r",
									"   * \r",
									"   * @constant\r",
									"   * @type {int}\r",
									"   */\r",
									"  DEFAULT_CLIENT_REQUEST_TIMEOUT_IN_MS: 120000,\r",
									"\r",
									"  /**\r",
									"  * Marker for atom metadata.\r",
									"  *\r",
									"  * @const\r",
									"  * @type {string}\r",
									"  */\r",
									"  XML_METADATA_MARKER: '$',\r",
									"\r",
									"  /**\r",
									"  * Marker for atom value.\r",
									"  *\r",
									"  * @const\r",
									"  * @type {string}\r",
									"  */\r",
									"  XML_VALUE_MARKER: '_',\r",
									"\r",
									"  /**\r",
									"  * Defines the service types indicators.\r",
									"  * \r",
									"  * @const\r",
									"  * @enum\r",
									"  */\r",
									"  ServiceType: {\r",
									"    Blob: 'blob',\r",
									"    Queue: 'queue',\r",
									"    Table: 'table',\r",
									"    File: 'file',\r",
									"  },\r",
									"\r",
									"  /**\r",
									"  * Specifies the location used to indicate which location the operation can be performed against.\r",
									"  *\r",
									"  * @const\r",
									"  * @enum\r",
									"  */\r",
									"  RequestLocationMode: {\r",
									"    PRIMARY_ONLY: 0,\r",
									"    SECONDARY_ONLY: 1,\r",
									"    PRIMARY_OR_SECONDARY: 2,\r",
									"  },\r",
									"\r",
									"  /**\r",
									"  * Represents a storage service location.\r",
									"  *\r",
									"  * @const\r",
									"  * @enum\r",
									"  */\r",
									"  StorageLocation: {\r",
									"    PRIMARY: 0,\r",
									"    SECONDARY: 1,\r",
									"  },\r",
									"\r",
									"  AccountSasConstants: {\r",
									"    /**\r",
									"    * Permission types\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    Permissions: {\r",
									"      READ: 'r',\r",
									"      ADD: 'a',\r",
									"      CREATE: 'c',\r",
									"      UPDATE: 'u',\r",
									"      PROCESS: 'p',\r",
									"      WRITE: 'w',\r",
									"      DELETE: 'd',\r",
									"      LIST: 'l'\r",
									"    },\r",
									"\r",
									"    /**\r",
									"    * Services types\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    Services: {\r",
									"      BLOB: 'b',\r",
									"      FILE: 'f',\r",
									"      QUEUE: 'q',\r",
									"      TABLE: 't',\r",
									"    },\r",
									"\r",
									"    /**\r",
									"    * Resources types\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    Resources: {\r",
									"      SERVICE: 's',\r",
									"      CONTAINER: 'c',\r",
									"      OBJECT: 'o'\r",
									"    },\r",
									"\r",
									"    Protocols: {\r",
									"      HTTPSONLY: 'https',\r",
									"      HTTPSORHTTP: 'https,http'\r",
									"    },\r",
									"  },\r",
									"\r",
									"  /**\r",
									"  * Defines constants for use with shared access policies.\r",
									"  */\r",
									"  AclConstants: {\r",
									"    /**\r",
									"    * XML element for an access policy.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ACCESS_POLICY: 'AccessPolicy',\r",
									"\r",
									"    /**\r",
									"    * XML element for the end time of an access policy.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    EXPIRY: 'Expiry',\r",
									"\r",
									"    /**\r",
									"    * XML attribute for IDs.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ID: 'Id',\r",
									"\r",
									"    /**\r",
									"    * XML element for the permission of an access policy.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PERMISSION: 'Permission',\r",
									"\r",
									"    /**\r",
									"    * XML element for a signed identifier.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_IDENTIFIER_ELEMENT: 'SignedIdentifier',\r",
									"\r",
									"    /**\r",
									"    * XML element for signed identifiers.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_IDENTIFIERS_ELEMENT: 'SignedIdentifiers',\r",
									"\r",
									"    /**\r",
									"    * XML element for the start time of an access policy.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    START: 'Start'\r",
									"  },\r",
									"\r",
									"  /**\r",
									"  * Defines constants for use with service properties.\r",
									"  */\r",
									"  ServicePropertiesConstants: {\r",
									"    /**\r",
									"    * XML element for storage service properties.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    STORAGE_SERVICE_PROPERTIES_ELEMENT: 'StorageServiceProperties',\r",
									"\r",
									"    /**\r",
									"    * Default analytics version to send for logging, hour metrics and minute metrics.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    DEFAULT_ANALYTICS_VERSION: '1.0',\r",
									"\r",
									"    /**\r",
									"    * XML element for logging.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LOGGING_ELEMENT: 'Logging',\r",
									"\r",
									"    /**\r",
									"    * XML element for version.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    VERSION_ELEMENT: 'Version',\r",
									"\r",
									"    /**\r",
									"    * XML element for delete.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    DELETE_ELEMENT: 'Delete',\r",
									"\r",
									"    /**\r",
									"    * XML element for read.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    READ_ELEMENT: 'Read',\r",
									"\r",
									"    /**\r",
									"    * XML element for write.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    WRITE_ELEMENT: 'Write',\r",
									"\r",
									"    /**\r",
									"    * XML element for retention policy.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    RETENTION_POLICY_ELEMENT: 'RetentionPolicy',\r",
									"\r",
									"    /**\r",
									"    * XML element for enabled.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ENABLED_ELEMENT: 'Enabled',\r",
									"\r",
									"    /**\r",
									"    * XML element for days.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    DAYS_ELEMENT: 'Days',\r",
									"\r",
									"    /**\r",
									"    * XML element for HourMetrics.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    HOUR_METRICS_ELEMENT: 'HourMetrics',\r",
									"\r",
									"    /**\r",
									"    * XML element for MinuteMetrics.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    MINUTE_METRICS_ELEMENT: 'MinuteMetrics',\r",
									"\r",
									"    /**\r",
									"    * XML element for Cors.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CORS_ELEMENT: 'Cors',\r",
									"\r",
									"    /**\r",
									"    * XML element for CorsRule.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CORS_RULE_ELEMENT: 'CorsRule',\r",
									"\r",
									"    /**\r",
									"    * XML element for AllowedOrigins.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ALLOWED_ORIGINS_ELEMENT: 'AllowedOrigins',\r",
									"\r",
									"    /**\r",
									"    * XML element for AllowedMethods.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ALLOWED_METHODS_ELEMENT: 'AllowedMethods',\r",
									"\r",
									"    /**\r",
									"    * XML element for MaxAgeInSeconds.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    MAX_AGE_IN_SECONDS_ELEMENT: 'MaxAgeInSeconds',\r",
									"\r",
									"    /**\r",
									"    * XML element for ExposedHeaders.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    EXPOSED_HEADERS_ELEMENT: 'ExposedHeaders',\r",
									"\r",
									"    /**\r",
									"    * XML element for AllowedHeaders.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ALLOWED_HEADERS_ELEMENT: 'AllowedHeaders',\r",
									"\r",
									"    /**\r",
									"    * XML element for IncludeAPIs.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    INCLUDE_APIS_ELEMENT: 'IncludeAPIs',\r",
									"\r",
									"    /**\r",
									"    * XML element for DefaultServiceVersion.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    DEFAULT_SERVICE_VERSION_ELEMENT: 'DefaultServiceVersion'\r",
									"  },\r",
									"\r",
									"  /**\r",
									"  * Defines constants for use with blob operations.\r",
									"  */\r",
									"  BlobConstants: {\r",
									"    /**\r",
									"    * XML element for the latest.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LATEST_ELEMENT: 'Latest',\r",
									"\r",
									"    /**\r",
									"    * XML element for uncommitted blocks.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    UNCOMMITTED_ELEMENT: 'Uncommitted',\r",
									"\r",
									"    /**\r",
									"    * XML element for a block list.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOCK_LIST_ELEMENT: 'BlockList',\r",
									"\r",
									"    /**\r",
									"    * XML element for committed blocks.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    COMMITTED_ELEMENT: 'Committed',\r",
									"\r",
									"    /**\r",
									"    * The default write page size, in bytes, used by blob streams.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    DEFAULT_WRITE_PAGE_SIZE_IN_BYTES: 4 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The minimum write page size, in bytes, used by blob streams.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    MIN_WRITE_PAGE_SIZE_IN_BYTES: 2 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The default maximum size, in bytes, of a blob before it must be separated into blocks.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    DEFAULT_SINGLE_BLOB_PUT_THRESHOLD_IN_BYTES: 32 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The default write block size, in bytes, used by blob streams.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    DEFAULT_WRITE_BLOCK_SIZE_IN_BYTES: 4 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The maximum size of a single block of block blob.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    MAX_BLOCK_BLOB_BLOCK_SIZE: 100 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The maximum size of a single block of append blob.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    MAX_APPEND_BLOB_BLOCK_SIZE: 4 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The maximum size, in bytes, of a blob before it must be separated into blocks.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    MAX_SINGLE_UPLOAD_BLOB_SIZE_IN_BYTES: 64 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The maximum range get size when requesting for a contentMD5\r",
									"    */\r",
									"    MAX_RANGE_GET_SIZE_WITH_MD5: 4 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The maximum page range size for a page update operation.\r",
									"    */\r",
									"    MAX_UPDATE_PAGE_SIZE: 4 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The maximum buffer size for writing a stream buffer.\r",
									"    */\r",
									"    MAX_QUEUED_WRITE_DISK_BUFFER_SIZE: 64 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * Max size for single get page range. The max value should be 150MB\r",
									"    * http://blogs.msdn.com/b/windowsazurestorage/archive/2012/03/26/getting-the-page-ranges-of-a-large-page-blob-in-segments.aspx\r",
									"    */\r",
									"    MAX_SINGLE_GET_PAGE_RANGE_SIZE: 37 * 4 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The size of a page, in bytes, in a page blob.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PAGE_SIZE: 512,\r",
									"\r",
									"    /**\r",
									"    * Resource types.\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    ResourceTypes: {\r",
									"      CONTAINER: 'c',\r",
									"      BLOB: 'b'\r",
									"    },\r",
									"\r",
									"    /**\r",
									"    * List blob types.\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    ListBlobTypes: {\r",
									"      Blob: 'b',\r",
									"      Directory: 'd'\r",
									"    },\r",
									"\r",
									"    /**\r",
									"    * Put page write options\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    PageWriteOptions: {\r",
									"      UPDATE: 'update',\r",
									"      CLEAR: 'clear'\r",
									"    },\r",
									"\r",
									"    /**\r",
									"    * Blob types\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    BlobTypes: {\r",
									"      BLOCK: 'BlockBlob',\r",
									"      PAGE: 'PageBlob',\r",
									"      APPEND: 'AppendBlob'\r",
									"    },\r",
									"\r",
									"    /**\r",
									"    * Blob lease constants\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    LeaseOperation: {\r",
									"      ACQUIRE: 'acquire',\r",
									"      RENEW: 'renew',\r",
									"      CHANGE: 'change',\r",
									"      RELEASE: 'release',\r",
									"      BREAK: 'break'\r",
									"    }\r",
									"  },\r",
									"\r",
									"  /**\r",
									"  * Defines constants for use with file operations.\r",
									"  */\r",
									"  FileConstants: {\r",
									"    /**\r",
									"    * The default write size, in bytes, used by file streams.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    DEFAULT_WRITE_SIZE_IN_BYTES: 4 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The maximum range size when requesting for a contentMD5.\r",
									"    */\r",
									"    MAX_RANGE_GET_SIZE_WITH_MD5: 4 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The maximum range size for a file update operation.\r",
									"    */\r",
									"    MAX_UPDATE_FILE_SIZE: 4 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The default minimum size, in bytes, of a file when it must be separated into ranges.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    DEFAULT_SINGLE_FILE_GET_THRESHOLD_IN_BYTES: 32 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * The minimum write file size, in bytes, used by file streams.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    MIN_WRITE_FILE_SIZE_IN_BYTES: 2 * 1024 * 1024,\r",
									"\r",
									"    /**\r",
									"    * Put range write options\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    RangeWriteOptions: {\r",
									"      UPDATE: 'update',\r",
									"      CLEAR: 'clear'\r",
									"    },\r",
									"\r",
									"    /**\r",
									"    * Resource types.\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    ResourceTypes: {\r",
									"      SHARE: 's',\r",
									"      FILE: 'f'\r",
									"    }\r",
									"  },\r",
									"\r",
									"  /**\r",
									"  * Defines constants for use with queue storage.\r",
									"  *\r",
									"  * @const\r",
									"  * @type {string}\r",
									"  */\r",
									"  QueueConstants: {\r",
									"    /**\r",
									"    * XML element for QueueMessage.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    QUEUE_MESSAGE_ELEMENT: 'QueueMessage',\r",
									"\r",
									"    /**\r",
									"    * XML element for MessageText.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    MESSAGE_TEXT_ELEMENT: 'MessageText'\r",
									"  },\r",
									"\r",
									"  /**\r",
									"  * Defines constants for use with table storage.\r",
									"  *\r",
									"  * @const\r",
									"  * @type {string}\r",
									"  */\r",
									"  TableConstants: {\r",
									"    /**\r",
									"    * The changeset response delimiter.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CHANGESET_DELIMITER: '--changesetresponse_',\r",
									"\r",
									"    /**\r",
									"    * The batch response delimiter.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BATCH_DELIMITER: '--batchresponse_',\r",
									"\r",
									"    /**\r",
									"    * The next continuation row key token.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTINUATION_NEXT_ROW_KEY: 'x-ms-continuation-nextrowkey',\r",
									"\r",
									"    /**\r",
									"    * The next continuation partition key token.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTINUATION_NEXT_PARTITION_KEY: 'x-ms-continuation-nextpartitionkey',\r",
									"\r",
									"    /**\r",
									"    * The next continuation table name token.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTINUATION_NEXT_TABLE_NAME: 'x-ms-continuation-nexttablename',\r",
									"\r",
									"    /**\r",
									"    * The next row key query string argument.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    NEXT_ROW_KEY: 'NextRowKey',\r",
									"\r",
									"    /**\r",
									"* The next partition key query string argument.\r",
									"*\r",
									"* @const\r",
									"* @type {string}\r",
									"*/\r",
									"    NEXT_PARTITION_KEY: 'NextPartitionKey',\r",
									"\r",
									"    /**\r",
									"    * The next table name query string argument.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    NEXT_TABLE_NAME: 'NextTableName',\r",
									"\r",
									"    /** \r",
									"    * Prefix of the odata properties returned in a JSON query\r",
									"    */\r",
									"    ODATA_PREFIX: 'odata.',\r",
									"\r",
									"    /**\r",
									"    * Constant representing the string following a type annotation in a JSON table query\r",
									"    */\r",
									"    ODATA_TYPE_SUFFIX: '@odata.type',\r",
									"\r",
									"    /**\r",
									"    * Constant representing the property where the odata metadata elements are stored.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ODATA_METADATA_MARKER: '.metadata',\r",
									"\r",
									"    /**\r",
									"    * Constant representing the value for an entity property.\r",
									"    */\r",
									"    ODATA_VALUE_MARKER: '_',\r",
									"\r",
									"    /** \r",
									"    * Constant representing the type for an entity property.\r",
									"    */\r",
									"    ODATA_TYPE_MARKER: '$',\r",
									"\r",
									"    /**\r",
									"    * The value to set the maximum data service version header.\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    DEFAULT_DATA_SERVICE_VERSION: '3.0;NetFx',\r",
									"\r",
									"    /**\r",
									"    * The name of the property that stores the table name.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    TABLE_NAME: 'TableName',\r",
									"\r",
									"    /**\r",
									"    * The name of the special table used to store tables.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    TABLE_SERVICE_TABLE_NAME: 'Tables',\r",
									"\r",
									"    /**\r",
									"    * Operations\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    Operations: {\r",
									"      RETRIEVE: 'RETRIEVE',\r",
									"      INSERT: 'INSERT',\r",
									"      REPLACE: 'REPLACE',\r",
									"      MERGE: 'MERGE',\r",
									"      DELETE: 'DELETE',\r",
									"      INSERT_OR_REPLACE: 'INSERT_OR_REPLACE',\r",
									"      INSERT_OR_MERGE: 'INSERT_OR_MERGE'\r",
									"    }\r",
									"  },\r",
									"\r",
									"  /**\r",
									"  * Defines constants for use with HTTP headers.\r",
									"  */\r",
									"  HeaderConstants: {\r",
									"    /**\r",
									"    * The accept ranges header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ACCEPT_RANGES: 'accept_ranges',\r",
									"\r",
									"    /**\r",
									"    * The content transfer encoding header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_TRANSFER_ENCODING: 'content-transfer-encoding',\r",
									"\r",
									"    /**\r",
									"    * The transfer encoding header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    TRANSFER_ENCODING: 'transfer-encoding',\r",
									"\r",
									"    /**\r",
									"    * The server header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SERVER: 'server',\r",
									"\r",
									"    /**\r",
									"    * The location header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LOCATION: 'location',\r",
									"\r",
									"    /**\r",
									"    * The Last-Modified header\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LAST_MODIFIED: 'Last-Modified',\r",
									"\r",
									"    /**\r",
									"    * The data service version.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    DATA_SERVICE_VERSION: 'dataserviceversion',\r",
									"\r",
									"    /**\r",
									"    * The maximum data service version.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    MAX_DATA_SERVICE_VERSION: 'maxdataserviceversion',\r",
									"\r",
									"    /**\r",
									"    * The master Windows Azure Storage header prefix.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PREFIX_FOR_STORAGE: 'x-ms-',\r",
									"\r",
									"    /**\r",
									"    * The client request Id header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CLIENT_REQUEST_ID: 'x-ms-client-request-id',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies the approximate message count of a queue.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    APPROXIMATE_MESSAGES_COUNT: 'x-ms-approximate-messages-count',\r",
									"\r",
									"    /**\r",
									"    * The Authorization header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    AUTHORIZATION: 'authorization',\r",
									"\r",
									"    /**\r",
									"    * The header that is used to avoid browser cache.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    FORCE_NO_CACHE_IN_BROWSER: '_',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies public access to blobs.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOB_PUBLIC_ACCESS: 'x-ms-blob-public-access',\r",
									"\r",
									"    /**\r",
									"    * The header for the blob type.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOB_TYPE: 'x-ms-blob-type',\r",
									"\r",
									"    /**\r",
									"    * The header for the type.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    TYPE: 'x-ms-type',\r",
									"\r",
									"    /**\r",
									"    * Specifies the block blob type.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOCK_BLOB: 'blockblob',\r",
									"\r",
									"    /**\r",
									"    * The CacheControl header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CACHE_CONTROL: 'cache-control',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies blob caching control.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOB_CACHE_CONTROL: 'x-ms-blob-cache-control',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies caching control.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    FILE_CACHE_CONTROL: 'x-ms-cache-control',\r",
									"\r",
									"    /**\r",
									"    * The copy status.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    COPY_STATUS: 'x-ms-copy-status',\r",
									"\r",
									"    /**\r",
									"    * The copy completion time\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    COPY_COMPLETION_TIME: 'x-ms-copy-completion-time',\r",
									"\r",
									"    /**\r",
									"    * The copy status message\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    COPY_STATUS_DESCRIPTION: 'x-ms-copy-status-description',\r",
									"\r",
									"    /**\r",
									"    * The copy identifier.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    COPY_ID: 'x-ms-copy-id',\r",
									"\r",
									"    /**\r",
									"    * Progress of any copy operation\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    COPY_PROGRESS: 'x-ms-copy-progress',\r",
									"\r",
									"    /**\r",
									"    * The copy action.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    COPY_ACTION: 'x-ms-copy-action',\r",
									"\r",
									"    /**\r",
									"    * Flag if the blob is incremental copy blob.\r",
									"    */\r",
									"    INCREMENTAL_COPY: 'x-ms-incremental-copy',\r",
									"\r",
									"    /**\r",
									"    * Snapshot time of the last successful incremental copy snapshot for this blob.\r",
									"    */\r",
									"    COPY_DESTINATION_SNAPSHOT: 'x-ms-copy-destination-snapshot',\r",
									"\r",
									"    /**\r",
									"    * The ContentID header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_ID: 'content-id',\r",
									"\r",
									"    /**\r",
									"    * The ContentEncoding header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_ENCODING: 'content-encoding',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies blob content encoding.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOB_CONTENT_ENCODING: 'x-ms-blob-content-encoding',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies content encoding.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    FILE_CONTENT_ENCODING: 'x-ms-content-encoding',\r",
									"\r",
									"    /**\r",
									"    * The ContentLangauge header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_LANGUAGE: 'content-language',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies blob content language.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOB_CONTENT_LANGUAGE: 'x-ms-blob-content-language',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies content language.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    FILE_CONTENT_LANGUAGE: 'x-ms-content-language',\r",
									"\r",
									"    /**\r",
									"    * The ContentLength header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_LENGTH: 'content-length',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies blob content length.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOB_CONTENT_LENGTH: 'x-ms-blob-content-length',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies content length.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    FILE_CONTENT_LENGTH: 'x-ms-content-length',\r",
									"\r",
									"    /**\r",
									"    * The ContentDisposition header.\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_DISPOSITION: 'content-disposition',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies blob content disposition.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOB_CONTENT_DISPOSITION: 'x-ms-blob-content-disposition',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies content disposition.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    FILE_CONTENT_DISPOSITION: 'x-ms-content-disposition',\r",
									"\r",
									"    /**\r",
									"    * The ContentMD5 header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_MD5: 'content-md5',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies blob content MD5.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOB_CONTENT_MD5: 'x-ms-blob-content-md5',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies content MD5.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    FILE_CONTENT_MD5: 'x-ms-content-md5',\r",
									"\r",
									"    /**\r",
									"    * The ContentRange header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_RANGE: 'cache-range',\r",
									"\r",
									"    /**\r",
									"    * The ContentType header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_TYPE: 'content-type',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies blob content type.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOB_CONTENT_TYPE: 'x-ms-blob-content-type',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies content type.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    FILE_CONTENT_TYPE: 'x-ms-content-type',\r",
									"\r",
									"    /**\r",
									"    * The header for copy source.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    COPY_SOURCE: 'x-ms-copy-source',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies the date.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    DATE: 'date',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies the date.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    MS_DATE: 'x-ms-date',\r",
									"\r",
									"    /**\r",
									"    * The header to delete snapshots.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    DELETE_SNAPSHOT: 'x-ms-delete-snapshots',\r",
									"\r",
									"    /**\r",
									"    * The ETag header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ETAG: 'etag',\r",
									"\r",
									"    /**\r",
									"    * The IfMatch header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    IF_MATCH: 'if-match',\r",
									"\r",
									"    /**\r",
									"    * The IfModifiedSince header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    IF_MODIFIED_SINCE: 'if-modified-since',\r",
									"\r",
									"    /**\r",
									"    * The IfNoneMatch header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    IF_NONE_MATCH: 'if-none-match',\r",
									"\r",
									"    /**\r",
									"    * The IfUnmodifiedSince header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    IF_UNMODIFIED_SINCE: 'if-unmodified-since',\r",
									"\r",
									"    /**\r",
									"    * Specifies snapshots are to be included.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    INCLUDE_SNAPSHOTS_VALUE: 'include',\r",
									"\r",
									"    /**\r",
									"    * Specifies that the content-type is JSON.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    JSON_CONTENT_TYPE_VALUE: 'application/json;',\r",
									"\r",
									"\r",
									"    /**\r",
									"    * The header that specifies lease ID.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LEASE_ID: 'x-ms-lease-id',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies the lease break period.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LEASE_BREAK_PERIOD: 'x-ms-lease-break-period',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies the proposed lease identifier.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PROPOSED_LEASE_ID: 'x-ms-proposed-lease-id',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies the lease duration.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LEASE_DURATION: 'x-ms-lease-duration',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies the source lease ID.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SOURCE_LEASE_ID: 'x-ms-source-lease-id',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies lease time.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LEASE_TIME: 'x-ms-lease-time',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies lease status.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LEASE_STATUS: 'x-ms-lease-status',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies lease state.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LEASE_STATE: 'x-ms-lease-state',\r",
									"\r",
									"    /**\r",
									"    * Specifies the page blob type.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PAGE_BLOB: 'PageBlob',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies page write mode.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PAGE_WRITE: 'x-ms-page-write',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies file range write mode.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    FILE_WRITE: 'x-ms-write',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies whether the response should include the inserted entity.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PREFER: 'Prefer',\r",
									"\r",
									"    /**\r",
									"    * The header value which specifies that the response should include the inserted entity.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PREFER_CONTENT: 'return-content',\r",
									"\r",
									"    /**\r",
									"    * The header value which specifies that the response should not include the inserted entity.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PREFER_NO_CONTENT: 'return-no-content',\r",
									"\r",
									"    /**\r",
									"    * The header prefix for metadata.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PREFIX_FOR_STORAGE_METADATA: 'x-ms-meta-',\r",
									"\r",
									"    /**\r",
									"    * The header prefix for properties.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PREFIX_FOR_STORAGE_PROPERTIES: 'x-ms-prop-',\r",
									"\r",
									"    /**\r",
									"    * The Range header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    RANGE: 'Range',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies if the request will populate the ContentMD5 header for range gets.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    RANGE_GET_CONTENT_MD5: 'x-ms-range-get-content-md5',\r",
									"\r",
									"    /**\r",
									"    * The format string for specifying ranges.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    RANGE_HEADER_FORMAT: 'bytes:%d-%d',\r",
									"\r",
									"    /**\r",
									"    * The header that indicates the request ID.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    REQUEST_ID: 'x-ms-request-id',\r",
									"\r",
									"    /**\r",
									"    * The header for specifying the sequence number.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SEQUENCE_NUMBER: 'x-ms-blob-sequence-number',\r",
									"\r",
									"    /**\r",
									"    * The header for specifying the If-Sequence-Number-EQ condition.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SEQUENCE_NUMBER_EQUAL: 'x-ms-if-sequence-number-eq',\r",
									"\r",
									"    /**\r",
									"    * The header for specifying the If-Sequence-Number-LT condition.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SEQUENCE_NUMBER_LESS_THAN: 'x-ms-if-sequence-number-lt',\r",
									"\r",
									"    /**\r",
									"    * The header for specifying the If-Sequence-Number-LE condition.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SEQUENCE_NUMBER_LESS_THAN_OR_EQUAL: 'x-ms-if-sequence-number-le',\r",
									"\r",
									"    /**\r",
									"    * The header that specifies sequence number action.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SEQUENCE_NUMBER_ACTION: 'x-ms-sequence-number-action',\r",
									"\r",
									"    /**\r",
									"    * The header for the blob content length.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIZE: 'x-ms-blob-content-length',\r",
									"\r",
									"    /**\r",
									"    * The header for snapshots.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SNAPSHOT: 'x-ms-snapshot',\r",
									"\r",
									"    /**\r",
									"    * Specifies only snapshots are to be included.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SNAPSHOTS_ONLY_VALUE: 'only',\r",
									"\r",
									"    /**\r",
									"    * The header for the If-Match condition.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SOURCE_IF_MATCH: 'x-ms-source-if-match',\r",
									"\r",
									"    /**\r",
									"    * The header for the If-Modified-Since condition.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SOURCE_IF_MODIFIED_SINCE: 'x-ms-source-if-modified-since',\r",
									"\r",
									"    /**\r",
									"    * The header for the If-None-Match condition.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SOURCE_IF_NONE_MATCH: 'x-ms-source-if-none-match',\r",
									"\r",
									"    /**\r",
									"    * The header for the If-Unmodified-Since condition.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SOURCE_IF_UNMODIFIED_SINCE: 'x-ms-source-if-unmodified-since',\r",
									"\r",
									"    /**\r",
									"    * The header for data ranges.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    STORAGE_RANGE: 'x-ms-range',\r",
									"\r",
									"    /**\r",
									"    * The header for storage version.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    STORAGE_VERSION: 'x-ms-version',\r",
									"\r",
									"    /**\r",
									"    * The current storage version header value.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    TARGET_STORAGE_VERSION: '2016-05-31',\r",
									"\r",
									"    /**\r",
									"    * The UserAgent header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    USER_AGENT: 'user-agent',\r",
									"\r",
									"    /**\r",
									"    * The pop receipt header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    POP_RECEIPT: 'x-ms-popreceipt',\r",
									"\r",
									"    /**\r",
									"    * The time next visibile header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    TIME_NEXT_VISIBLE: 'x-ms-time-next-visible',\r",
									"\r",
									"    /**\r",
									"    * The approximate message counter header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    APPROXIMATE_MESSAGE_COUNT: 'x-ms-approximate-message-count',\r",
									"\r",
									"    /**\r",
									"    * The lease action header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LEASE_ACTION: 'x-ms-lease-action',\r",
									"\r",
									"    /**\r",
									"    * The accept header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ACCEPT: 'accept',\r",
									"\r",
									"    /**\r",
									"    * The accept charset header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ACCEPT_CHARSET: 'Accept-Charset',\r",
									"\r",
									"    /**\r",
									"    * The host header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    HOST: 'host',\r",
									"\r",
									"    /**\r",
									"    * The correlation identifier header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CORRELATION_ID: 'x-ms-correlation-id',\r",
									"\r",
									"    /**\r",
									"    * The group identifier header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    GROUP_ID: 'x-ms-group-id',\r",
									"\r",
									"    /**\r",
									"    * The share quota header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SHARE_QUOTA: 'x-ms-share-quota',\r",
									"\r",
									"    /**\r",
									"    * The max blob size header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    BLOB_CONDITION_MAX_SIZE: 'x-ms-blob-condition-maxsize',\r",
									"\r",
									"    /**\r",
									"    * The append blob position header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    BLOB_CONDITION_APPEND_POSITION: 'x-ms-blob-condition-appendpos',\r",
									"\r",
									"    /**\r",
									"    * The append blob append offset header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    BLOB_APPEND_OFFSET: 'x-ms-blob-append-offset',\r",
									"\r",
									"    /**\r",
									"    * The append blob committed block header.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {int}\r",
									"    */\r",
									"    BLOB_COMMITTED_BLOCK_COUNT: 'x-ms-blob-committed-block-count',\r",
									"\r",
									"    /**\r",
									"    * If the data and application metadata are completely encrypted using the specified algorithm.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {bool}\r",
									"    */\r",
									"    SERVER_ENCRYPTED: 'x-ms-server-encrypted',\r",
									"  },\r",
									"\r",
									"  QueryStringConstants: {\r",
									"\r",
									"    /**\r",
									"    * Query component for SAS API version.\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    API_VERSION: 'api-version',\r",
									"\r",
									"    /**\r",
									"    * The Comp value.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    COMP: 'comp',\r",
									"\r",
									"    /**\r",
									"    * The Res Type.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    RESTYPE: 'restype',\r",
									"\r",
									"    /**\r",
									"    * The copy Id.\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    COPY_ID: 'copyid',\r",
									"\r",
									"    /**\r",
									"    * The Snapshot value.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SNAPSHOT: 'snapshot',\r",
									"\r",
									"    /**\r",
									"    * The previous snapshot value.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PREV_SNAPSHOT: 'prevsnapshot',\r",
									"\r",
									"    /**\r",
									"    * The timeout value.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    TIMEOUT: 'timeout',\r",
									"\r",
									"    /**\r",
									"    * The signed start time query string argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_START: 'st',\r",
									"\r",
									"    /**\r",
									"    * The signed expiry time query string argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_EXPIRY: 'se',\r",
									"\r",
									"    /**\r",
									"    * The signed resource query string argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_RESOURCE: 'sr',\r",
									"\r",
									"    /**\r",
									"    * The signed permissions query string argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_PERMISSIONS: 'sp',\r",
									"\r",
									"    /**\r",
									"    * The signed services query string argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_SERVICES: 'ss',\r",
									"\r",
									"    /**\r",
									"    * The signed resource types query string argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_RESOURCE_TYPES: 'srt',\r",
									"\r",
									"    /**\r",
									"    * The signed IP query string argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_IP: 'sip',\r",
									"\r",
									"    /**\r",
									"    * The signed protocol query string argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_PROTOCOL: 'spr',\r",
									"\r",
									"    /**\r",
									"    * The signed identifier query string argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_IDENTIFIER: 'si',\r",
									"\r",
									"    /**\r",
									"    * The signature query string argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNATURE: 'sig',\r",
									"\r",
									"    /**\r",
									"    * The signed version argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SIGNED_VERSION: 'sv',\r",
									"\r",
									"    /**\r",
									"    * The cache control argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CACHE_CONTROL: 'rscc',\r",
									"\r",
									"    /**\r",
									"    * The content type argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_TYPE: 'rsct',\r",
									"\r",
									"    /**\r",
									"    * The content encoding argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_ENCODING: 'rsce',\r",
									"\r",
									"    /**\r",
									"    * The content language argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_LANGUAGE: 'rscl',\r",
									"\r",
									"    /**\r",
									"    * The content disposition argument for shared access signature.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    CONTENT_DISPOSITION: 'rscd',\r",
									"\r",
									"    /**\r",
									"    * The block identifier query string argument for blob service.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOCK_ID: 'blockid',\r",
									"\r",
									"    /**\r",
									"    * The block list type query string argument for blob service.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    BLOCK_LIST_TYPE: 'blocklisttype',\r",
									"\r",
									"    /**\r",
									"    * The prefix query string argument for listing operations.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PREFIX: 'prefix',\r",
									"\r",
									"    /**\r",
									"    * The marker query string argument for listing operations.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    MARKER: 'marker',\r",
									"\r",
									"    /**\r",
									"    * The maxresults query string argument for listing operations.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    MAX_RESULTS: 'maxresults',\r",
									"\r",
									"    /**\r",
									"    * The delimiter query string argument for listing operations.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    DELIMITER: 'delimiter',\r",
									"\r",
									"    /**\r",
									"    * The include query string argument for listing operations.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    INCLUDE: 'include',\r",
									"\r",
									"    /**\r",
									"    * The peekonly query string argument for queue service.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    PEEK_ONLY: 'peekonly',\r",
									"\r",
									"    /**\r",
									"    * The numofmessages query string argument for queue service.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    NUM_OF_MESSAGES: 'numofmessages',\r",
									"\r",
									"    /**\r",
									"    * The popreceipt query string argument for queue service.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    POP_RECEIPT: 'popreceipt',\r",
									"\r",
									"    /**\r",
									"    * The visibilitytimeout query string argument for queue service.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    VISIBILITY_TIMEOUT: 'visibilitytimeout',\r",
									"\r",
									"    /**\r",
									"    * The messagettl query string argument for queue service.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    MESSAGE_TTL: 'messagettl',\r",
									"\r",
									"    /**\r",
									"    * The select query string argument.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SELECT: '$select',\r",
									"\r",
									"    /**\r",
									"    * The filter query string argument.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    FILTER: '$filter',\r",
									"\r",
									"    /**\r",
									"    * The top query string argument.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    TOP: '$top',\r",
									"\r",
									"    /**\r",
									"    * The skip query string argument.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    SKIP: '$skip',\r",
									"\r",
									"    /**\r",
									"    * The next partition key query string argument for table service.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    NEXT_PARTITION_KEY: 'NextPartitionKey',\r",
									"\r",
									"    /**\r",
									"    * The next row key query string argument for table service.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    NEXT_ROW_KEY: 'NextRowKey',\r",
									"\r",
									"    /**\r",
									"    * The lock identifier for service bus messages.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    LOCK_ID: 'lockid',\r",
									"\r",
									"    /**\r",
									"    * The table name for table SAS URI's.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    TABLENAME: 'tn',\r",
									"\r",
									"    /**\r",
									"    * The starting Partition Key for tableSAS URI's.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    STARTPK: 'spk',\r",
									"\r",
									"    /**\r",
									"    * The starting Partition Key for tableSAS URI's.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    STARTRK: 'srk',\r",
									"\r",
									"    /**\r",
									"    * The ending Partition Key for tableSAS URI's.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ENDPK: 'epk',\r",
									"\r",
									"    /**\r",
									"    * The ending Partition Key for tableSAS URI's.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    ENDRK: 'erk'\r",
									"  },\r",
									"\r",
									"  StorageServiceClientConstants: {\r",
									"    /**\r",
									"    * The default protocol.\r",
									"    */\r",
									"    DEFAULT_PROTOCOL: 'https:',\r",
									"\r",
									"    /*\r",
									"    * Used environment variables.\r",
									"    * @enum {string}\r",
									"    */\r",
									"    EnvironmentVariables: {\r",
									"      AZURE_STORAGE_ACCOUNT: 'AZURE_STORAGE_ACCOUNT',\r",
									"      AZURE_STORAGE_ACCESS_KEY: 'AZURE_STORAGE_ACCESS_KEY',\r",
									"      AZURE_STORAGE_DNS_SUFFIX: 'AZURE_STORAGE_DNS_SUFFIX',\r",
									"      AZURE_STORAGE_CONNECTION_STRING: 'AZURE_STORAGE_CONNECTION_STRING',\r",
									"      HTTP_PROXY: 'HTTP_PROXY',\r",
									"      HTTPS_PROXY: 'HTTPS_PROXY',\r",
									"      EMULATED: 'EMULATED',\r",
									"    },\r",
									"\r",
									"    /**\r",
									"    * Default credentials.\r",
									"    */\r",
									"    DEVSTORE_STORAGE_ACCOUNT: 'devstoreaccount1',\r",
									"    DEVSTORE_STORAGE_ACCESS_KEY: 'Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==',\r",
									"\r",
									"    /**\r",
									"    * The development store URI.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    DEV_STORE_URI: 'http://127.0.0.1',\r",
									"\r",
									"    /**\r",
									"    * Development ServiceClient URLs.\r",
									"    */\r",
									"    DEVSTORE_DEFAULT_PROTOCOL: 'http://',\r",
									"    DEVSTORE_BLOB_HOST: '127.0.0.1:10000',\r",
									"    DEVSTORE_QUEUE_HOST: '127.0.0.1:10001',\r",
									"    DEVSTORE_TABLE_HOST: '127.0.0.1:10002',\r",
									"\r",
									"    /**\r",
									"    * Production ServiceClient URLs.\r",
									"    */\r",
									"    CLOUD_BLOB_HOST: 'blob.' + storageDnsSuffix,\r",
									"    CLOUD_QUEUE_HOST: 'queue.' + storageDnsSuffix,\r",
									"    CLOUD_TABLE_HOST: 'table.' + storageDnsSuffix,\r",
									"    CLOUD_FILE_HOST: 'file.' + storageDnsSuffix\r",
									"  },\r",
									"\r",
									"  HttpConstants: {\r",
									"    /**\r",
									"    * Http Verbs\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {string}\r",
									"    */\r",
									"    HttpVerbs: {\r",
									"      PUT: 'PUT',\r",
									"      GET: 'GET',\r",
									"      DELETE: 'DELETE',\r",
									"      POST: 'POST',\r",
									"      MERGE: 'MERGE',\r",
									"      HEAD: 'HEAD'\r",
									"    },\r",
									"\r",
									"    /**\r",
									"    * Response codes.\r",
									"    *\r",
									"    * @const\r",
									"    * @enum {int}\r",
									"    */\r",
									"    HttpResponseCodes: {\r",
									"      Ok: 200,\r",
									"      Created: 201,\r",
									"      Accepted: 202,\r",
									"      NoContent: 204,\r",
									"      PartialContent: 206,\r",
									"      BadRequest: 400,\r",
									"      Unauthorized: 401,\r",
									"      Forbidden: 403,\r",
									"      NotFound: 404,\r",
									"      Conflict: 409,\r",
									"      LengthRequired: 411,\r",
									"      PreconditionFailed: 412\r",
									"    }\r",
									"  },\r",
									"\r",
									"  CompatibleVersionConstants: {\r",
									"    /**\r",
									"    * Constant for the 2013-08-15 version.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    AUGUST_2013: '2013-08-15',\r",
									"\r",
									"    /**\r",
									"    * Constant for the 2012-02-12 version.\r",
									"    *\r",
									"    * @const\r",
									"    * @type {string}\r",
									"    */\r",
									"    FEBRUARY_2012: '2012-02-12'\r",
									"  },\r",
									"\r",
									"  BlobErrorCodeStrings: {\r",
									"    INVALID_BLOCK_ID: 'InvalidBlockId',\r",
									"    BLOB_NOT_FOUND: 'BlobNotFound',\r",
									"    BLOB_ALREADY_EXISTS: 'BlobAlreadyExists',\r",
									"    CONTAINER_ALREADY_EXISTS: 'ContainerAlreadyExists',\r",
									"    CONTAINER_NOT_FOUND: 'ContainerNotFound',\r",
									"    INVALID_BLOB_OR_BLOCK: 'InvalidBlobOrBlock',\r",
									"    INVALID_BLOCK_LIST: 'InvalidBlockList'\r",
									"  },\r",
									"\r",
									"  FileErrorCodeStrings: {\r",
									"    SHARE_ALREADY_EXISTS: 'ShareAlreadyExists',\r",
									"    SHARE_NOT_FOUND: 'ShareNotFound',\r",
									"    FILE_NOT_FOUND: 'FileNotFound'\r",
									"  },\r",
									"\r",
									"  QueueErrorCodeStrings: {\r",
									"    QUEUE_NOT_FOUND: 'QueueNotFound',\r",
									"    QUEUE_DISABLED: 'QueueDisabled',\r",
									"    QUEUE_ALREADY_EXISTS: 'QueueAlreadyExists',\r",
									"    QUEUE_NOT_EMPTY: 'QueueNotEmpty',\r",
									"    QUEUE_BEING_DELETED: 'QueueBeingDeleted',\r",
									"    POP_RECEIPT_MISMATCH: 'PopReceiptMismatch',\r",
									"    INVALID_PARAMETER: 'InvalidParameter',\r",
									"    MESSAGE_NOT_FOUND: 'MessageNotFound',\r",
									"    MESSAGE_TOO_LARGE: 'MessageTooLarge',\r",
									"    INVALID_MARKER: 'InvalidMarker'\r",
									"  },\r",
									"\r",
									"  /**\r",
									"  * Constants for storage error strings\r",
									"  *\r",
									"  * More details are at: http://msdn.microsoft.com/en-us/library/azure/dd179357.aspx\r",
									"  */\r",
									"  StorageErrorCodeStrings: {\r",
									"    // Not Modified (304): The condition specified in the conditional header(s) was not met for a read operation.\r",
									"    // Precondition Failed (412): The condition specified in the conditional header(s) was not met for a write operation.\r",
									"    CONDITION_NOT_MET: 'ConditionNotMet',\r",
									"    // Bad Request (400): A required HTTP header was not specified.\r",
									"    MISSING_REQUIRED_HEADER: 'MissingRequiredHeader',\r",
									"    // Bad Request (400): A required XML node was not specified in the request body.\r",
									"    MISSING_REQUIRED_XML_NODE: 'MissingRequiredXmlNode',\r",
									"    // Bad Request (400): One of the HTTP headers specified in the request is not supported.\r",
									"    UNSUPPORTED_HEADER: 'UnsupportedHeader',\r",
									"    // Bad Request (400): One of the XML nodes specified in the request body is not supported.\r",
									"    UNSUPPORTED_XML_NODE: 'UnsupportedXmlNode',\r",
									"    // Bad Request (400): The value provided for one of the HTTP headers was not in the correct format.\r",
									"    INVALID_HEADER_VALUE: 'InvalidHeaderValue',\r",
									"    // Bad Request (400): The value provided for one of the XML nodes in the request body was not in the correct format.\r",
									"    INVALID_XML_NODE_VALUE: 'InvalidXmlNodeValue',\r",
									"    // Bad Request (400): A required query parameter was not specified for this request.\r",
									"    MISSING_REQUIRED_QUERY_PARAMETER: 'MissingRequiredQueryParameter',\r",
									"    // Bad Request (400): One of the query parameters specified in the request URI is not supported.\r",
									"    UNSUPPORTED_QUERY_PARAMETER: 'UnsupportedQueryParameter',\r",
									"    // Bad Request (400): An invalid value was specified for one of the query parameters in the request URI.\r",
									"    INVALID_QUERY_PARAMETER_VALUE: 'InvalidQueryParameterValue',\r",
									"    // Bad Request (400): A query parameter specified in the request URI is outside the permissible range.\r",
									"    OUT_OF_RANGE_QUERY_PARAMETER_VALUE: 'OutOfRangeQueryParameterValue',\r",
									"    // Bad Request (400): The url in the request could not be parsed.\r",
									"    REQUEST_URL_FAILED_TO_PARSE: 'RequestUrlFailedToParse',\r",
									"    // Bad Request (400): The requested URI does not represent any resource on the server.\r",
									"    INVALID_URI: 'InvalidUri',\r",
									"    // Bad Request (400): The HTTP verb specified was not recognized by the server.\r",
									"    INVALID_HTTP_VERB: 'InvalidHttpVerb',\r",
									"    // Bad Request (400): The key for one of the metadata key-value pairs is empty.\r",
									"    EMPTY_METADATA_KEY: 'EmptyMetadataKey',\r",
									"    // Bad Request (400): The specified XML is not syntactically valid.\r",
									"    INVALID_XML_DOCUMENT: 'InvalidXmlDocument',\r",
									"    // Bad Request (400): The MD5 value specified in the request did not match the MD5 value calculated by the server.\r",
									"    MD5_MISMATCH: 'Md5Mismatch',\r",
									"    // Bad Request (400): The MD5 value specified in the request is invalid. The MD5 value must be 128 bits and Base64-encoded.\r",
									"    INVALID_MD5: 'InvalidMd5',\r",
									"    // Bad Request (400): One of the request inputs is out of range.\r",
									"    OUT_OF_RANGE_INPUT: 'OutOfRangeInput',\r",
									"    // Bad Request (400): The authentication information was not provided in the correct format. Verify the value of Authorization header.\r",
									"    INVALID_AUTHENTICATION_INFO: 'InvalidAuthenticationInfo',\r",
									"    // Bad Request (400): One of the request inputs is not valid.\r",
									"    INVALID_INPUT: 'InvalidInput',\r",
									"    // Bad Request (400): The specified metadata is invalid. It includes characters that are not permitted.\r",
									"    INVALID_METADATA: 'InvalidMetadata',\r",
									"    // Bad Request (400): The specifed resource name contains invalid characters.\r",
									"    INVALID_RESOURCE_NAME: 'InvalidResourceName',\r",
									"    // Bad Request (400): The size of the specified metadata exceeds the maximum size permitted.\r",
									"    METADATA_TOO_LARGE: 'MetadataTooLarge',\r",
									"    // Bad Request (400): Condition headers are not supported.\r",
									"    CONDITION_HEADER_NOT_SUPPORTED: 'ConditionHeadersNotSupported',\r",
									"    // Bad Request (400): Multiple condition headers are not supported.\r",
									"    MULTIPLE_CONDITION_HEADER_NOT_SUPPORTED: 'MultipleConditionHeadersNotSupported',\r",
									"    // Forbidden (403): Server failed to authenticate the request. Make sure the value of the Authorization header is formed correctly including the signature.\r",
									"    AUTHENTICATION_FAILED: 'AuthenticationFailed',\r",
									"    // Forbidden (403): Read-access geo-redundant replication is not enabled for the account.\r",
									"    // Forbidden (403): Write operations to the secondary location are not allowed.\r",
									"    // Forbidden (403): The account being accessed does not have sufficient permissions to execute this operation.\r",
									"    INSUFFICIENT_ACCOUNT_PERMISSIONS: 'InsufficientAccountPermissions',\r",
									"    // Not Found (404): The specified resource does not exist.\r",
									"    RESOURCE_NOT_FOUND: 'ResourceNotFound',\r",
									"    // Forbidden (403): The specified account is disabled.\r",
									"    ACCOUNT_IS_DISABLED: 'AccountIsDisabled',\r",
									"    // Method Not Allowed (405): The resource doesn't support the specified HTTP verb.\r",
									"    UNSUPPORTED_HTTP_VERB: 'UnsupportedHttpVerb',\r",
									"    // Conflict (409): The specified account already exists. \r",
									"    ACCOUNT_ALREADY_EXISTS: 'AccountAlreadyExists',\r",
									"    // Conflict (409): The specified account is in the process of being created.\r",
									"    ACCOUNT_BEING_CREATED: 'AccountBeingCreated',\r",
									"    // Conflict (409): The specified resource already exists.\r",
									"    RESOURCE_ALREADY_EXISTS: 'ResourceAlreadyExists',\r",
									"    // Conflict (409): The specified resource type does not match the type of the existing resource.\r",
									"    RESOURCE_TYPE_MISMATCH: 'ResourceTypeMismatch',\r",
									"    // Length Required (411): The Content-Length header was not specified.\r",
									"    MISSING_CONTENT_LENGTH_HEADER: 'MissingContentLengthHeader',\r",
									"    // Request Entity Too Large (413): The size of the request body exceeds the maximum size permitted.\r",
									"    REQUEST_BODY_TOO_LARGE: 'RequestBodyTooLarge',\r",
									"    // Requested Range Not Satisfiable (416): The range specified is invalid for the current size of the resource.\r",
									"    INVALID_RANGE: 'InvalidRange',\r",
									"    // Internal Server Error (500): The server encountered an internal error. Please retry the request.\r",
									"    INTERNAL_ERROR: 'InternalError',\r",
									"    // Internal Server Error (500): The operation could not be completed within the permitted time.\r",
									"    OPERATION_TIMED_OUT: 'OperationTimedOut',\r",
									"    // Service Unavailable (503): The server is currently unable to receive requests. Please retry your request. \r",
									"    SERVER_BUSY: 'ServerBusy',\r",
									"\r",
									"    // Legacy error code strings\r",
									"    UPDATE_CONDITION_NOT_SATISFIED: 'UpdateConditionNotSatisfied',\r",
									"    CONTAINER_NOT_FOUND: 'ContainerNotFound',\r",
									"    CONTAINER_ALREADY_EXISTS: 'ContainerAlreadyExists',\r",
									"    CONTAINER_DISABLED: 'ContainerDisabled',\r",
									"    CONTAINER_BEING_DELETED: 'ContainerBeingDeleted',\r",
									"  },\r",
									"\r",
									"  TableErrorCodeStrings: {\r",
									"    XMETHOD_NOT_USING_POST: 'XMethodNotUsingPost',\r",
									"    XMETHOD_INCORRECT_VALUE: 'XMethodIncorrectValue',\r",
									"    XMETHOD_INCORRECT_COUNT: 'XMethodIncorrectCount',\r",
									"    TABLE_HAS_NO_PROPERTIES: 'TableHasNoProperties',\r",
									"    DUPLICATE_PROPERTIES_SPECIFIED: 'DuplicatePropertiesSpecified',\r",
									"    TABLE_HAS_NO_SUCH_PROPERTY: 'TableHasNoSuchProperty',\r",
									"    DUPLICATE_KEY_PROPERTY_SPECIFIED: 'DuplicateKeyPropertySpecified',\r",
									"    TABLE_ALREADY_EXISTS: 'TableAlreadyExists',\r",
									"    TABLE_NOT_FOUND: 'TableNotFound',\r",
									"    ENTITY_NOT_FOUND: 'EntityNotFound',\r",
									"    ENTITY_ALREADY_EXISTS: 'EntityAlreadyExists',\r",
									"    PARTITION_KEY_NOT_SPECIFIED: 'PartitionKeyNotSpecified',\r",
									"    OPERATOR_INVALID: 'OperatorInvalid',\r",
									"    UPDATE_CONDITION_NOT_SATISFIED: 'UpdateConditionNotSatisfied',\r",
									"    PROPERTIES_NEED_VALUE: 'PropertiesNeedValue',\r",
									"    PARTITION_KEY_PROPERTY_CANNOT_BE_UPDATED: 'PartitionKeyPropertyCannotBeUpdated',\r",
									"    TOO_MANY_PROPERTIES: 'TooManyProperties',\r",
									"    ENTITY_TOO_LARGE: 'EntityTooLarge',\r",
									"    PROPERTY_VALUE_TOO_LARGE: 'PropertyValueTooLarge',\r",
									"    INVALID_VALUE_TYPE: 'InvalidValueType',\r",
									"    TABLE_BEING_DELETED: 'TableBeingDeleted',\r",
									"    TABLE_SERVER_OUT_OF_MEMORY: 'TableServerOutOfMemory',\r",
									"    PRIMARY_KEY_PROPERTY_IS_INVALID_TYPE: 'PrimaryKeyPropertyIsInvalidType',\r",
									"    PROPERTY_NAME_TOO_LONG: 'PropertyNameTooLong',\r",
									"    PROPERTY_NAME_INVALID: 'PropertyNameInvalid',\r",
									"    BATCH_OPERATION_NOT_SUPPORTED: 'BatchOperationNotSupported',\r",
									"    JSON_FORMAT_NOT_SUPPORTED: 'JsonFormatNotSupported',\r",
									"    METHOD_NOT_ALLOWED: 'MethodNotAllowed',\r",
									"    NOT_IMPLEMENTED: 'NotImplemented'\r",
									"  },\r",
									"\r",
									"  ConnectionStringKeys: {\r",
									"    USE_DEVELOPMENT_STORAGE_NAME: 'UseDevelopmentStorage',\r",
									"    DEVELOPMENT_STORAGE_PROXY_URI_NAME: 'DevelopmentStorageProxyUri',\r",
									"    DEFAULT_ENDPOINTS_PROTOCOL_NAME: 'DefaultEndpointsProtocol',\r",
									"    ACCOUNT_NAME_NAME: 'AccountName',\r",
									"    ACCOUNT_KEY_NAME: 'AccountKey',\r",
									"    BLOB_ENDPOINT_NAME: 'BlobEndpoint',\r",
									"    FILE_ENDPOINT_NAME: 'FileEndpoint',\r",
									"    QUEUE_ENDPOINT_NAME: 'QueueEndpoint',\r",
									"    TABLE_ENDPOINT_NAME: 'TableEndpoint',\r",
									"    SHARED_ACCESS_SIGNATURE_NAME: 'SharedAccessSignature',\r",
									"    ENDPOINT_SUFFIX_NAME: 'EndpointSuffix',\r",
									"    BLOB_BASE_DNS_NAME: 'blob.core.windows.net',\r",
									"    FILE_BASE_DNS_NAME: 'file.core.windows.net',\r",
									"    QUEUE_BASE_DNS_NAME: 'queue.core.windows.net',\r",
									"    TABLE_BASE_DNS_NAME: 'table.core.windows.net'\r",
									"  }\r",
									"};\r",
									"\r",
									"var HeaderConstants = Constants.HeaderConstants;\r",
									"var QueryStringConstants = Constants.QueryStringConstants;\r",
									"var HeaderConstants = Constants.HeaderConstants;\r",
									"var CompatibleVersionConstants = Constants.CompatibleVersionConstants;\r",
									"\r",
									"var storageSas = new AzureStorageSas(accountName, accountKey);\r",
									"var signedQueryString = storageSas.getSignedQueryString(options);\r",
									"\r",
									"pm.globals.set(postmanEnvVariableName, signedQueryString);\r",
									"\r",
									"console.log(signedQueryString);"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(pm.info.requestName, () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.not.have.jsonBody('error');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"inputBlobContainerUri\": \"https://{{deviceStorageAccountName}}.blob.core.windows.net/{{deviceStorageImportContainer}}?{{deviceStorageSasQueryString}}\",\n  \"outputBlobContainerUri\": \"https://{{deviceStorageAccountName}}.blob.core.windows.net/{{deviceStorageImportContainer}}?{{deviceStorageSasQueryString}}\"\n}\n\n"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{iotHubResourceGroup}}/providers/Microsoft.Devices/IotHubs/{{iotHubName}}/importDevices?api-version={{controlPlaneApiVersion}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								"{{subscriptionId}}",
								"resourceGroups",
								"{{iotHubResourceGroup}}",
								"providers",
								"Microsoft.Devices",
								"IotHubs",
								"{{iotHubName}}",
								"importDevices"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{controlPlaneApiVersion}}",
									"equals": true
								}
							]
						},
						"description": "Import, update, or delete device identities in the IoT hub identity registry from a blob. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities."
					},
					"response": []
				},
				{
					"name": "Add Consumer Group to Event Hub Endpoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(pm.info.requestName, () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.not.have.jsonBody('error');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{iotHubResourceGroup}}/providers/Microsoft.Devices/IotHubs/{{iotHubName}}/eventHubEndpoints/{{eventHubEndpointName}}/ConsumerGroups/{{eventHubConsumerGroupName}}?api-version={{controlPlaneApiVersion}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								"{{subscriptionId}}",
								"resourceGroups",
								"{{iotHubResourceGroup}}",
								"providers",
								"Microsoft.Devices",
								"IotHubs",
								"{{iotHubName}}",
								"eventHubEndpoints",
								"{{eventHubEndpointName}}",
								"ConsumerGroups",
								"{{eventHubConsumerGroupName}}"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{controlPlaneApiVersion}}",
									"equals": true
								}
							]
						},
						"description": "Add a consumer group to an Event Hub-compatible endpoint in an IoT hub."
					},
					"response": []
				},
				{
					"name": "Get Consumer Groups for Event Hub Endpoint ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(pm.info.requestName, () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.not.have.jsonBody('error');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{iotHubResourceGroup}}/providers/Microsoft.Devices/IotHubs/{{iotHubName}}/eventHubEndpoints/{{eventHubEndpointName}}/ConsumerGroups?api-version={{controlPlaneApiVersion}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								"{{subscriptionId}}",
								"resourceGroups",
								"{{iotHubResourceGroup}}",
								"providers",
								"Microsoft.Devices",
								"IotHubs",
								"{{iotHubName}}",
								"eventHubEndpoints",
								"{{eventHubEndpointName}}",
								"ConsumerGroups"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{controlPlaneApiVersion}}",
									"equals": true
								}
							]
						},
						"description": "Get a list of the consumer groups in the Event Hub-compatible device-to-cloud endpoint in an IoT hub."
					},
					"response": []
				},
				{
					"name": "Get Consumer Group for Event Hub Endpoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(pm.info.requestName, () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.not.have.jsonBody('error');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{iotHubResourceGroup}}/providers/Microsoft.Devices/IotHubs/{{iotHubName}}/eventHubEndpoints/{{eventHubEndpointName}}/ConsumerGroups/{{eventHubConsumerGroupName}}?api-version={{controlPlaneApiVersion}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								"{{subscriptionId}}",
								"resourceGroups",
								"{{iotHubResourceGroup}}",
								"providers",
								"Microsoft.Devices",
								"IotHubs",
								"{{iotHubName}}",
								"eventHubEndpoints",
								"{{eventHubEndpointName}}",
								"ConsumerGroups",
								"{{eventHubConsumerGroupName}}"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{controlPlaneApiVersion}}",
									"equals": true
								}
							]
						},
						"description": "Get a consumer group from the Event Hub-compatible device-to-cloud endpoint for an IoT hub."
					},
					"response": []
				},
				{
					"name": "Delete Consumer Group from Event Hub Endpoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(pm.info.requestName, () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.not.have.jsonBody('error');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{iotHubResourceGroup}}/providers/Microsoft.Devices/IotHubs/{{iotHubName}}/eventHubEndpoints/{{eventHubEndpointName}}/ConsumerGroups/{{eventHubConsumerGroupName}}?api-version={{controlPlaneApiVersion}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								"{{subscriptionId}}",
								"resourceGroups",
								"{{iotHubResourceGroup}}",
								"providers",
								"Microsoft.Devices",
								"IotHubs",
								"{{iotHubName}}",
								"eventHubEndpoints",
								"{{eventHubEndpointName}}",
								"ConsumerGroups",
								"{{eventHubConsumerGroupName}}"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{controlPlaneApiVersion}}",
									"equals": true
								}
							]
						},
						"description": "Delete a consumer group from an Event Hub-compatible endpoint in an IoT hub."
					},
					"response": []
				},
				{
					"name": "Delete IoT Hub",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(pm.info.requestName, () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.not.have.jsonBody('error');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{iotHubResourceGroup}}/providers/Microsoft.Devices/IotHubs/{{iotHubCreateDeleteName}}?api-version={{controlPlaneApiVersion}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								"{{subscriptionId}}",
								"resourceGroups",
								"{{iotHubResourceGroup}}",
								"providers",
								"Microsoft.Devices",
								"IotHubs",
								"{{iotHubCreateDeleteName}}"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{controlPlaneApiVersion}}",
									"equals": true
								}
							]
						},
						"description": "Delete an IoT hub."
					},
					"response": []
				},
				{
					"name": "Create or Update IoT Hub",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(pm.info.requestName, () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.not.have.jsonBody('error');",
									"});",
									"",
									"pm.globals.set(\"createUpdateIoTHubResponseUrl\", pm.response.headers.get(\"Azure-AsyncOperation\"));",
									"pm.globals.set(\"nextRequest\", 'Verify Create or Update IoT Hub');",
									"postman.setNextRequest('Verify Create or Update IoT Hub');",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"location\": \"West US\",\r\n  \"sku\": {\r\n    \"name\": \"S1\",\r\n    \"tier\": \"Standard\",\r\n    \"capacity\": 1\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{iotHubResourceGroup}}/providers/Microsoft.Devices/IotHubs/{{iotHubCreateDeleteName}}?api-version={{controlPlaneApiVersion}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								"{{subscriptionId}}",
								"resourceGroups",
								"{{iotHubResourceGroup}}",
								"providers",
								"Microsoft.Devices",
								"IotHubs",
								"{{iotHubCreateDeleteName}}"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{controlPlaneApiVersion}}",
									"equals": true
								}
							]
						},
						"description": "Create or update the metadata of an Iot hub. The usual pattern to modify a property is to retrieve the IoT hub metadata and security metadata, and then combine them with the modified values in a new body to update the IoT hub."
					},
					"response": []
				},
				{
					"name": "Verify Create or Update IoT Hub",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var json = pm.response.json();",
									"",
									"if(json.error){",
									"    tests[pm.info.requestName] = false;",
									"}else{",
									"    if(json.status !== 'Running'){",
									"        tests[pm.info.requestName] = json.status === 'Succeeded';   ",
									"        pm.environment.clear('nextRequest');",
									"    }else{",
									"        postman.setNextRequest('Delay');",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{createUpdateIoTHubResponseUrl}}",
							"host": [
								"{{createUpdateIoTHubResponseUrl}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete IoT Hub",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Delete IoT Hub\"] = responseCode.code === 202;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{iotHubResourceGroup}}/providers/Microsoft.Devices/IotHubs/{{iotHubCreateDeleteName}}?api-version={{controlPlaneApiVersion}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								"{{subscriptionId}}",
								"resourceGroups",
								"{{iotHubResourceGroup}}",
								"providers",
								"Microsoft.Devices",
								"IotHubs",
								"{{iotHubCreateDeleteName}}"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{controlPlaneApiVersion}}",
									"equals": true
								}
							]
						},
						"description": "Delete an IoT hub."
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7e12fe49-a446-49e5-86f7-80845f858aeb",
						"type": "text/javascript",
						"exec": [
							"pm.sendRequest({",
							"    url: 'https://login.microsoftonline.com/' + pm.environment.get(\"tenantId\") + '/oauth2/token',",
							"    method: 'POST',",
							"    header: 'Content-Type: application/x-www-form-urlencoded',",
							"    body: {",
							"        mode: 'urlencoded',",
							"        urlencoded: [ ",
							"            {key: \"grant_type\", value: \"client_credentials\", disabled: false},",
							"            {key: \"client_id\", value: pm.environment.get(\"clientId\"), disabled: false},",
							"            {key: \"client_secret\", value: pm.environment.get(\"clientSecret\"), disabled: false},",
							"            {key: \"resource\", value: pm.environment.get(\"resource\"), disabled: false}",
							"        ]",
							"    }",
							"}, function (err, res) {",
							"    pm.globals.set(\"bearerToken\", res.json().access_token);",
							"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "568cfa74-6e46-4863-bcc1-d92f50e23854",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Utils",
			"description": "",
			"item": [
				{
					"name": "Delay",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var next = postman.getEnvironmentVariable('nextRequest');",
									"if(next !== ''){",
									"    postman.setNextRequest(next);",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "https://echo.getpostman.com/delay/{{delay}}",
							"protocol": "https",
							"host": [
								"echo",
								"getpostman",
								"com"
							],
							"path": [
								"delay",
								"{{delay}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get AAD Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "512fb818-4c0d-4c2d-9720-96a9f052e04a",
								"type": "text/javascript",
								"exec": [
									"pm.test(pm.info.requestName, () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.not.have.jsonBody('error');",
									"});",
									"pm.globals.set(\"bearerToken\", pm.response.json().access_token);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text",
									"description": ""
								},
								{
									"key": "client_id",
									"value": "{{clientId}}",
									"type": "text",
									"description": ""
								},
								{
									"key": "client_secret",
									"value": "{{clientSecret}}",
									"type": "text",
									"description": ""
								},
								{
									"key": "resource",
									"value": "{{resource}}",
									"type": "text",
									"description": ""
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{tenantId}}/oauth2/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{tenantId}}",
								"oauth2",
								"token"
							]
						},
						"description": "An Azure Active Directory App Token is needed to call Azure Resource Manager REST APIS. See [How to Use Azure Active Directory (AAD) Access Tokens in Postman](http://blog.jongallant.com/2017/03/azure-active-directory-access-tokens-postman/) for instructions on how to get your clientId, clientSecret and tenantId used in this request."
					},
					"response": []
				}
			]
		}
	]
}